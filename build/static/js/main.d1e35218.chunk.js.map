{"version":3,"sources":["components/events/EventList.jsx","actions/index.js","components/Header/Header.jsx","components/HomePage.jsx","components/form/LoginForm.jsx","components/form/RegisterForm.jsx","components/form/PlacesInput.jsx","components/form/CreateEvent.jsx","components/events/MyEvents.jsx","components/events/EventDetailMap.jsx","components/events/EventDetail.jsx","components/form/EditForm.jsx","components/LandingPage.jsx","App.js","serviceWorker.js","reducers/eventsReducers.js","reducers/authReducer.js","reducers/imageUpload.js","reducers/updateEvent.js","reducers/loadingReducer.js","reducers/errorReducer.js","reducers/index.js","config/firebase.js","index.js"],"names":["connect","state","events","firestore","ordered","Events","name","firebase","profile","props","useFirestoreConnect","collection","eventList","map","event","className","size","src","images","alt","description","to","id","uploadImage","files","console","log","dispatch","getState","getFirebase","a","type","payload","uploadImages","imageUrl","Promise","resolve","reject","imageUrls","i","file","uploadTask","storage","ref","put","originFileObj","on","snapshot","error","getDownloadURL","push","length","uid","auth","signOut","then","catch","err","setTimeout","React","useState","isOpen","setIsOpen","history","useHistory","menu","Item","Divider","onClick","split","overlay","visible","placement","HomePage","this","style","margin","width","textAlign","message","Component","errorReducer","validationSchema","Yup","shape","email","required","password","mapDispatchToProps","signIn","credentials","signInWithEmailAndPassword","signInWithGoogle","parameter","login","provider","res","authError","isEmpty","initialValues","onSubmit","values","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","htmlFor","onChange","value","onBlur","Password","color","textDecoration","cursor","min","contact","confirmPassword","when","is","val","oneOf","register","newUser","getFirestore","createUserWithEmailAndPassword","doc","user","set","placeholder","fetchedValues","updateEvent","setFieldValue","placesField","address","setAddress","lat","lng","setCoordinates","handleSelect","geocodeByAddress","results","getLatLng","latLng","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","height","suggestion","active","backgroundColor","padding","borderBottom","borderLeft","borderRight","createEvent","add","url","imageUpload","creatorId","loadingReducer","uploader","fileList","maxMembers","price","contactNumber","places","urls","creator","TextArea","autoSize","minRows","maxRows","multiple","deleteEvent","e","delete","fetchValues","filter","myEvents","EventDetailMap","latitude","longitude","center","Marker","fontSize","bootstrapURLKeys","key","defaultCenter","defaultZoom","text","ownProps","match","params","isVisible","setVisibility","autoplay","image","updateValues","update","createrId","obj","isUpdated","maxLength","LandingPage","App","basename","process","exact","path","component","LoginForm","RegisterForm","CreateEvent","MyEvents","EvenDetail","EditForm","Boolean","window","location","hostname","initialState","authReducer","action","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","withExtraArgument","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d1e35218.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card } from \"antd\";\r\nimport \"./EventList.css\";\r\nimport { useFirestoreConnect } from \"react-redux-firebase\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst EventList = props => {\r\n  useFirestoreConnect([{ collection: \"Events\" }]);\r\n  let eventList =\r\n    props.events &&\r\n    props.events.map(event => {\r\n      return (\r\n        <Card className=\"ant-card\" key={event.id} size=\"default\">\r\n          <img src={event.images[0]} alt=\"img\" className=\"event-img\" />\r\n          <div className=\"details\">\r\n            <h1 className=\"event-heading\">{event.name}</h1>\r\n            <p>{event.description}</p>\r\n            <NavLink to={`event/${event.id}`}>\r\n              <button className=\"view-more\">\r\n                View More\r\n              </button>\r\n            </NavLink>\r\n          </div>\r\n        </Card>\r\n      );\r\n    });\r\n  return <div className=\"eventList\">{eventList}</div>;\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    events: state.firestore.ordered.Events,\r\n    name: state.firebase.profile.name\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(EventList);\r\n","import firebase from \"firebase/app\";\r\n\r\nexport const createEvent = (event) => {\r\n    return (dispatch, getFirebase, getState) => {\r\n        dispatch({ type: \"LOADING\", payload: true });\r\n        const firestore = firebase.firestore();\r\n        firestore\r\n            .collection(\"Events\")\r\n            .add({\r\n                ...event,\r\n            })\r\n            .then(() => {\r\n                dispatch({ type: \"CREATE_EVENT\", event });\r\n                dispatch({ type: \"LOADING\", payload: false });\r\n            })\r\n            .catch((err) => {\r\n                // dispatch({ type: \"ERROR\", err });\r\n                dispatch({ type: \"ERROR_CATCHED\", payload: true });\r\n                setTimeout(() => {\r\n                    dispatch({ type: \"ERROR_CATCHED\", payload: false });\r\n                }, 10000);\r\n            });\r\n    };\r\n};\r\n\r\nexport const deleteEvent = (e) => {\r\n    return (dispatch, getFirebase, getState) => {\r\n        const firestore = firebase.firestore();\r\n        firestore\r\n            .collection(\"Events\")\r\n            .doc(e.id)\r\n            .delete()\r\n            .then((res) => {\r\n                dispatch({ type: \"DELETED\" });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: \"ERROR_CATCHED\", payload: true });\r\n                setTimeout(() => {\r\n                    dispatch({ type: \"ERROR_CATCHED\", payload: false });\r\n                }, 10000);\r\n            });\r\n    };\r\n};\r\n\r\nexport const updateValues = (\r\n    id,\r\n    name,\r\n    description,\r\n    price,\r\n    maxMembers,\r\n    contactNumber,\r\n    places,\r\n    history\r\n) => {\r\n    return (dispatch, getFirebase, getState) => {\r\n        dispatch({ type: \"LOADING\", payload: true });\r\n        const firestore = firebase.firestore();\r\n        firestore\r\n            .collection(\"Events\")\r\n            .doc(id)\r\n            .update({\r\n                name,\r\n                description,\r\n                price,\r\n                maxMembers,\r\n                contactNumber,\r\n                places,\r\n            })\r\n            .then(() => {\r\n                dispatch({ type: \"LOADING\", payload: false });\r\n                history.push(\"/MyEvents\");\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: \"ERROR_CATCHED\", payload: true });\r\n                setTimeout(() => {\r\n                    dispatch({ type: \"ERROR_CATCHED\", payload: false });\r\n                }, 10000);\r\n            });\r\n    };\r\n};\r\n\r\nexport const fetchValues = (id, events) => {\r\n    return (dispatch) => {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                let values = events.filter((event) => event.id === id);\r\n                if (values.length > 0) {\r\n                    dispatch({ type: \"FETCHED_VALUES\", payload: values });\r\n                    return resolve(values);\r\n                }\r\n            } catch (error) {\r\n                return resolve(false);\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\nexport const signIn = (credentials, history) => {\r\n    return (dispatch, getState, getFirebase) => {\r\n        const firebase = getFirebase();\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n            .then(() => {\r\n                dispatch({ type: \"LOGIN_SUCCESS\" });\r\n                history.push(\"/homePage\");\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: \"ERROR_CATCHED\", payload: true });\r\n                setTimeout(() => {\r\n                    dispatch({ type: \"ERROR_CATCHED\", payload: false });\r\n                }, 10000);\r\n            });\r\n    };\r\n};\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, getFirebase) => {\r\n        const firebase = getFirebase();\r\n        firebase\r\n            .auth()\r\n            .signOut()\r\n            .then(() => {\r\n                dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: \"ERROR_CATCHED\", payload: true });\r\n                setTimeout(() => {\r\n                    dispatch({ type: \"ERROR_CATCHED\", payload: false });\r\n                }, 10000);\r\n            });\r\n    };\r\n};\r\n\r\nexport const register = (newUser, history) => {\r\n    return (dispatch, getState, getFirebase, getFirestore) => {\r\n        const firebase = getFirebase();\r\n        const firestore = firebase.firestore();\r\n        return firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n            .then((res) => {\r\n                console.log(res, \"resss\");\r\n                return firestore.collection(\"users\").doc(res.user.uid).set({\r\n                    name: newUser.name,\r\n                    contact: newUser.contact,\r\n                });\r\n            })\r\n            .then(() => {\r\n                dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n                history.push(\"/homePage\");\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type: \"ERROR_CATCHED\", payload: true });\r\n                setTimeout(() => {\r\n                    dispatch({ type: \"ERROR_CATCHED\", payload: false });\r\n                }, 10000);\r\n            });\r\n    };\r\n};\r\n\r\nexport const signInWithGoogle = (parameter) => {\r\n    return (dispatch, getState, getFirebase) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase\r\n            .login({\r\n                provider: \"google\",\r\n                type: \"popup\",\r\n            })\r\n            .then((res) => {\r\n                console.log(\"res\", res);\r\n                dispatch({ type: \"SIGNED_IN_WITH_GOOGLE\" });\r\n            })\r\n            .then(() => parameter.push(\"/homePage\"))\r\n            .catch((err) => {\r\n                dispatch({ type: \"ERROR_CATCHED\", payload: true });\r\n                setTimeout(() => {\r\n                    dispatch({ type: \"ERROR_CATCHED\", payload: false });\r\n                }, 10000);\r\n            });\r\n    };\r\n};\r\n\r\nexport const uploadImage = (files, name) => {\r\n    console.log(\"incoming files\", files);\r\n    return async(dispatch, getState, getFirebase) => {\r\n        try {\r\n            dispatch({ type: \"LOADING\", payload: true });\r\n            let firebase = getFirebase();\r\n            const imageUrl = await uploadImages(files, name, firebase, dispatch);\r\n            console.log(imageUrl);\r\n            dispatch({ type: \"UPLOAD_COMPLETE\", payload: imageUrl });\r\n            dispatch({ type: \"LOADING\", payload: false });\r\n            return Promise.resolve(imageUrl);\r\n        } catch (error) {\r\n            return Promise.resolve(false);\r\n        }\r\n    };\r\n};\r\n\r\nconst uploadImages = (files, name, firebase, dispatch) => {\r\n    return new Promise((resolve, reject) => {\r\n        let imageUrls = [];\r\n        try {\r\n            for (let i = 0; i < files.length; i++) {\r\n                const file = files[i];\r\n                const uploadTask = firebase\r\n                    .storage()\r\n                    .ref(`images/${name}/${file.name}`)\r\n                    .put(file.originFileObj);\r\n\r\n                uploadTask.on(\r\n                    \"state_changed\",\r\n                    (snapshot) => {\r\n\r\n                        dispatch({ type: \"PROGRESS\", payload: \"progressing\" });\r\n                    },\r\n                    (error) => {\r\n                        console.log(error);\r\n                        reject(error);\r\n                    },\r\n                    async() => {\r\n                        let imageUrl = await uploadTask.snapshot.ref.getDownloadURL();\r\n                        console.log(imageUrl);\r\n                        imageUrls.push(imageUrl);\r\n                        if (imageUrls.length === files.length) {\r\n                            console.log({ imageUrls });\r\n                            resolve(imageUrls);\r\n                        }\r\n                    }\r\n                );\r\n            }\r\n        } catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n};","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"./../../actions\";\r\nimport { Menu, Dropdown, Icon } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  let history = useHistory();\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item key=\"0\">\r\n        <NavLink to=\"/createEvent\">Create Event</NavLink>\r\n      </Menu.Item>\r\n      <Menu.Divider />\r\n      <Menu.Item\r\n        key=\"1\"\r\n        onClick={() => {\r\n          history.push(\"/homePage\");\r\n          props.signOut();\r\n        }}\r\n      >\r\n        Sign Out\r\n      </Menu.Item>\r\n      <Menu.Divider />\r\n      <Menu.Item key=\"3\">\r\n        <NavLink to=\"/MyEvents\">My Events</NavLink>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1>EVENTS</h1>\r\n        <div className=\"buttons\">\r\n          {props.uid ? (\r\n            <div className=\"signed-in-header-button\">\r\n              <div className=\"signed-in-div\">\r\n                <div className=\"initials\">\r\n                  {props.name && props.name.split(\" \")[0][0]}\r\n                </div>\r\n              </div>\r\n              <Dropdown overlay={menu} visible={isOpen} placement=\"bottomRight\">\r\n                <button\r\n                  className=\"profile-name\"\r\n                  onClick={() => {\r\n                    setIsOpen(!isOpen);\r\n                  }}\r\n                >\r\n                  {props.name}\r\n                  <Icon type=\"caret-down\" className=\"caret-down-icon\" />\r\n                </button>\r\n              </Dropdown>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {\" \"}\r\n              <div className=\"signed-out-header-buttons\">\r\n                <NavLink to=\"/login\">\r\n                  <button type=\"primary\" className=\"header-button signIn\">\r\n                    Sign In\r\n                  </button>\r\n                </NavLink>\r\n                {\" \"}\r\n                <NavLink to=\"/register\">\r\n                  <button className=\"header-button sign-up\">Register</button>\r\n                </NavLink>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signOut: () => {\r\n      dispatch(signOut());\r\n    }\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    uid: state.firebase.auth.uid,\r\n    events: state.firestore.ordered.Events,\r\n    // error: state.errorReducer,\r\n    name: state.firebase.profile.name\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React, { Component } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./HomePage.css\";\r\nimport { Layout, Alert } from \"antd\";\r\nimport EventList from \"./events/EventList\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./Header/Header\";\r\n\r\nclass HomePage extends Component {\r\n  render() {\r\n    const { error } = this.props;\r\n    return (\r\n      <div className=\"App\">\r\n        <Layout className=\"layout-style\">\r\n          <Header />\r\n          <section className=\"events-list\">\r\n            <EventList />\r\n          </section>\r\n          <div className=\"error-div\">\r\n            {this.props.error === true && (\r\n              <Alert\r\n                style={{\r\n                  margin: \"1em\",\r\n                  width: \"300px\",\r\n                  textAlign: \"center\"\r\n                }}\r\n                type=\"error\"\r\n                message=\"Something went wrong.\"\r\n              ></Alert>\r\n            )}\r\n          </div>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    error: state.errorReducer\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HomePage);\r\n","import { useHistory } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Input, Button, Icon } from \"antd\";\r\nimport \"./LoginForm.css\";\r\nimport { signIn, signInWithGoogle } from \"./../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Alert } from \"antd\";\r\nimport Header from \"./../Header/Header\";\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .required(\"Enter Your Email Address\")\r\n    .email(\"Invalid Email\"),\r\n  password: Yup.string().required(\"Enter your password\")\r\n});\r\n\r\nconst LoginForm = props => {\r\n  let history = useHistory();\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n          password: \"\"\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={values => {\r\n          props.signIn(values, history);\r\n         \r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting\r\n        }) => (\r\n          <>\r\n            <Header />\r\n            <div className=\"container\">\r\n              <div className=\"login-form-container\">\r\n                <form className=\"login-form\">\r\n                  <div className=\"form-field\">\r\n                    <label htmlFor=\"email\">Email Address</label>\r\n                    <Input\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      onChange={handleChange}\r\n                      value={values.email}\r\n                      onBlur={handleBlur}\r\n                    ></Input>\r\n                    {errors.email && touched.email ? (\r\n                      <div className=\"Error-message\">{errors.email}</div>\r\n                    ) : null}\r\n                  </div>\r\n                  <div className=\"form-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <Input.Password\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      onChange={handleChange}\r\n                      value={values.password}\r\n                      onBlur={handleBlur}\r\n                    ></Input.Password>\r\n                    {errors.password && touched.password ? (\r\n                      <div className=\"Error-message\">{errors.password}</div>\r\n                    ) : null}\r\n                  </div>\r\n                  <div className=\"form-field\">\r\n                    <Button type=\"primary submit\" onClick={handleSubmit}>\r\n                      Login\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"partition\">\r\n                    <hr></hr>\r\n                    <span className=\"partition-span\">OR</span>\r\n                    <hr></hr>\r\n                  </div>\r\n                </form>\r\n                <div className=\"form-field\">\r\n                  <button\r\n                    className=\"login-button-google\"\r\n                    type=\"submit\"\r\n                    onClick={() => {\r\n                      props.signInWithGoogle(props.history);\r\n                   \r\n                    }}\r\n                  >\r\n                    <Icon type=\"google\" className=\"google-icon\" />\r\n                    Login with Google\r\n                  </button>\r\n                </div>\r\n                <div className=\"form-field\">\r\n                  <p>\r\n                    Don't have an account.\r\n                    <span\r\n                      style={{\r\n                        color: \"blue\",\r\n                        textDecoration: \"underline\",\r\n                        margin: \"1px\",\r\n                        cursor: \"pointer\"\r\n                      }}\r\n                      onClick={() => {\r\n                        props.history.push(\"/register\");\r\n                      }}\r\n                    >\r\n                      Register\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"error-div\">\r\n                {props.error === true && (\r\n                  <Alert\r\n                    style={{\r\n                      margin: \"1em\",\r\n                      width: \"300px\",\r\n                      textAlign: \"center\"\r\n                    }}\r\n                    type=\"error\"\r\n                    message=\"Invalid Email or Password\"\r\n                  ></Alert>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    isEmpty: state.firebase.auth.isEmpty,\r\n    error: state.errorReducer\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  signIn,\r\n  signInWithGoogle\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","import { useHistory } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Input, Button, Alert } from \"antd\";\r\nimport \"./RegisterForm.css\";\r\nimport { register } from \"./../../actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./../Header/Header\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .required(\"Must enter your name\")\r\n    .min(6, \"too short\"),\r\n  contact: Yup.number().required(\"Must give number\"),\r\n  email: Yup.string()\r\n    .required(\"Must give email\")\r\n    .email(\"Invalid Email\"),\r\n  password: Yup.string()\r\n    .required(\"Enter your Password\")\r\n    .min(8, \"Too short\"),\r\n  confirmPassword: Yup.string().when(\"password\", {\r\n    is: val => (val && val.length > 0 ? true : false),\r\n    then: Yup.string().oneOf(\r\n      [Yup.ref(\"password\")],\r\n      \"Both password need to be the same\"\r\n    )\r\n  })\r\n});\r\n\r\nconst RegisterForm = props => {\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n          contact: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          confirmPassword: \"\"\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={values => {\r\n\r\n          props.register(values, props.history)\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting\r\n        }) => (\r\n          <>\r\n            <Header />\r\n            <div className=\"register-form-container\">\r\n              <form className=\"form\">\r\n                <div className=\"form-field\">\r\n                  <label htmlFor=\"name\">Name</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter your name\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    onChange={handleChange}\r\n                    value={values.name}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {errors.name && touched.name ? (\r\n                    <div className=\"Error-message\">{errors.name}</div>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-field\">\r\n                  <label htmlFor=\"contact\">Contact</label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    placeholder=\"Enter contact Number\"\r\n                    id=\"contact\"\r\n                    name=\"contact\"\r\n                    onChange={handleChange}\r\n                    value={values.contact}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {errors.contact && touched.contact ? (\r\n                    <div className=\"Error-message\">{errors.contact}</div>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-field\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email Address\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    onChange={handleChange}\r\n                    value={values.email}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {errors.email && touched.email ? (\r\n                    <div className=\"Error-message\">{errors.email}</div>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-field\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input.Password\r\n                    type=\"password\"\r\n                    placeholder=\"Enter your password\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    onChange={handleChange}\r\n                    value={values.password}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {errors.password && touched.password ? (\r\n                    <div className=\"Error-message\">{errors.password}</div>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-field\">\r\n                  <label htmlFor=\"password\">Confirm Password</label>\r\n                  <Input.Password\r\n                    type=\"password\"\r\n                    placeholder=\"Enter the confirmed password\"\r\n                    id=\"confirmPassword\"\r\n                    name=\"confirmPassword\"\r\n                    onChange={handleChange}\r\n                    value={values.confirmPassword}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {errors.confirmPassword ? (\r\n                    <div className=\"Error-message\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-field Button\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    onClick={handleSubmit}\r\n                    className=\"register-button\"\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n                <div className=\"form-field\">\r\n                  <p>\r\n                    Already have an account.{\" \"}\r\n                    <span\r\n                      style={{\r\n                        color: \"blue\",\r\n                        textDecoration: \"underline\",\r\n                        margin: \"1px\",\r\n                        cursor: \"pointer\"\r\n                      }}\r\n                      onClick={() => {\r\n                        props.history.push(\"/login\");\r\n                      }}\r\n                    >\r\n                      Sign In\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n              </form>\r\n              <div className=\"error-div\">\r\n                {props.error === true && (\r\n                  <Alert\r\n                    style={{\r\n                      margin: \"1em\",\r\n                      width: \"300px\",\r\n                      textAlign: \"center\"\r\n                    }}\r\n                    type=\"error\"\r\n                    message=\"Something went wrong\"\r\n                  ></Alert>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    error: state.errorReducer\r\n  };\r\n};\r\n\r\nconst mapDisptachToProps = dispatch => {\r\n  return {\r\n    register:(newUser, history) => {\r\n      dispatch(register(newUser, history));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDisptachToProps)(RegisterForm);\r\n","import React from \"react\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\nimport { Input } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./PlacesInput.css\";\r\n\r\nconst PlacesInput = ({ setFieldValue, placesField }, props) => {\r\n  const [address, setAddress] = React.useState(\"\");\r\n  const [coordinates, setCoordinates] = React.useState({\r\n    lat: null,\r\n    lng: null,\r\n  });\r\n\r\n  const handleSelect = async (value) => {\r\n    const results = await geocodeByAddress(value);\r\n    const latLng = await getLatLng(results[0]);\r\n    setAddress(value);\r\n    setCoordinates(latLng);\r\n    setFieldValue(\"places\", latLng);\r\n  };\r\n\r\n  const handleChange = (address) => {\r\n    setAddress(address);\r\n  };\r\n  return (\r\n    <div>\r\n      <PlacesAutocomplete\r\n        value={address}\r\n        onChange={handleChange}\r\n        onSelect={handleSelect}\r\n      >\r\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n          <>\r\n            <Input\r\n              style={{\r\n                height: \"32px\",\r\n              }}\r\n              {...getInputProps({\r\n                placeholder: \"Type your address\",\r\n              })}\r\n            ></Input>\r\n            <div>{loading ? <div>...loading</div> : null}</div>\r\n            {suggestions.map((suggestion) => {\r\n              console.log(suggestion)\r\n              const className = suggestion.active\r\n                ? \"suggestion-item--active\"\r\n                : \"suggestion-item\";\r\n              const style = suggestion.active\r\n                ? {\r\n                    backgroundColor: \"#fafafa\",\r\n                    cursor: \"pointer\",\r\n                    padding: \"5px\",\r\n                    borderBottom: \"1px solid #d9d9d9\",\r\n                    borderLeft: \"1px solid #d9d9d9\",\r\n                    borderRight: \"1px solid #d9d9d9\",\r\n                  }\r\n                : {\r\n                    backgroundColor: \"#ffffff\",\r\n                    cursor: \"pointer\",\r\n                    padding: \"5px\",\r\n                    borderBottom: \"1px solid #d9d9d9\",\r\n                    borderLeft: \"1px solid #d9d9d9\",\r\n                    borderRight: \"1px solid #d9d9d9\",\r\n                  };\r\n              return (\r\n                <div\r\n                  {...getSuggestionItemProps(suggestion, {\r\n                    className,\r\n                    style,\r\n                  })}\r\n               \r\n                >\r\n                \r\n                  <span>{suggestion.description}</span>\r\n                </div>\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n      </PlacesAutocomplete>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    fetchedValues: state.updateEvent[0],\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(PlacesInput);\r\n","import { useHistory } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { Input } from \"antd\";\r\nimport { Upload, Button, Icon, Alert } from \"antd\";\r\nimport { Formik } from \"formik\";\r\nimport \"./CreateEvent.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { createEvent, uploadImage } from \"./../../actions\";\r\nimport PlacesInput from \"./PlacesInput\";\r\nimport Header from \"./../Header/Header\";\r\n\r\nconst CreateEvent = props => {\r\n  \r\n\r\n  let uploader;\r\n  const imageUpload = file => {\r\n    console.log(file.fileList);\r\n    uploader = file.fileList;\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: \"\",\r\n        maxMembers: \"\",\r\n        description: \"\",\r\n        price: \"\",\r\n        contactNumber: \"\",\r\n        places: \"\"\r\n    \r\n      }}\r\n      onSubmit={async values => {\r\n        const urls = await props.uploadImage(uploader, values.name);\r\n\r\n        props.createEvent({\r\n          ...values,\r\n          creator: props.creatorId,\r\n          images: urls\r\n        });\r\n        props.history.push(\"/homePage\");\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        setFieldValue\r\n      }) => (\r\n        <>\r\n          <Header />\r\n     \r\n          <div className=\"form-container\">\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"eventName\">Event Name</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Event name\"\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  onChange={handleChange}\r\n                  value={values.name}\r\n                ></Input>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"maxMembers\">Maxium Members</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  id=\"maxMembers\"\r\n                  name=\"maxMembers\"\r\n                  onChange={handleChange}\r\n                  value={values.maxMembers}\r\n                ></Input>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"description\">Event Description</label>\r\n                <Input.TextArea\r\n                  placeholder=\"Describe your event....\"\r\n                  type=\"text\"\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  // autoSize={true}\r\n                  autoSize={{ minRows: 1, maxRows: 7 }}\r\n                  onChange={handleChange}\r\n                  value={values.description}\r\n                ></Input.TextArea>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"price\">Price per ticket</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  id=\"price\"\r\n                  name=\"price\"\r\n                  onChange={handleChange}\r\n                  value={values.price}\r\n                ></Input>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"contactNumber\">Contact Number</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  id=\"contactNumber\"\r\n                  name=\"contactNumber\"\r\n                  onChange={handleChange}\r\n                  value={values.contactNumber}\r\n                ></Input>\r\n              </div>\r\n\r\n              <div className=\"form-field\">\r\n                <label>Venue</label>\r\n                <PlacesInput setFieldValue={setFieldValue} />\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <Upload onChange={imageUpload} multiple>\r\n                  <Button>\r\n                    <Icon type=\"upload\" /> Upload\r\n                  </Button>\r\n                </Upload>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <button\r\n                  className=\"create-event-button\"\r\n                  onClick={handleSubmit}\r\n                  type=\"submit\"\r\n                >\r\n                  Create Event\r\n                  {props.loading === true && (\r\n                    <Icon\r\n                      type=\"loading\"\r\n                      style={{ color: \"white\", margin: \"3px\" }}\r\n                    ></Icon>\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </form>\r\n            <div className=\"error-div\">\r\n              {props.error === true && (\r\n                <Alert\r\n                  style={{\r\n                    margin: \"1em\",\r\n                    width: \"300px\",\r\n                    textAlign: \"center\"\r\n                  }}\r\n                  type=\"error\"\r\n                  message=\"Something went wrong\"\r\n                ></Alert>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    url: state.imageUpload.url,\r\n    creatorId: state.firebase.auth.uid,\r\n    imageUpload: state.imageUpload,\r\n    fetchedValues: state.updateEvent,\r\n    loading: state.loadingReducer,\r\n    error: state.errorReducer\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  createEvent,\r\n  uploadImage\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateEvent);\r\n","import { useHistory } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card, Icon, Alert } from \"antd\";\r\nimport { useFirestoreConnect } from \"react-redux-firebase\";\r\nimport \"./MyEvents.css\";\r\n\r\nimport { deleteEvent, fetchValues } from \"./../../actions/\";\r\nimport Header from \"./../Header/Header\";\r\n\r\nconst MyEvents = props => {\r\n  let history = useHistory();\r\n  let myEvents;\r\n  useFirestoreConnect([{ collection: \"Events\" }]);\r\n \r\n\r\n  myEvents = props.events\r\n    ? props.events.filter(event => event.creator === props.user)\r\n    : null;\r\n\r\n\r\n  return (\r\n    <div className=\"my-events\">\r\n      <Header />\r\n      <div className=\"my-events-container\">\r\n        <div className=\"heading\">\r\n          <h1 className=\"my-events-heading\">My Events</h1>\r\n        </div>\r\n        <div className=\"my-events-list\">\r\n          {myEvents &&\r\n            myEvents.map(event => (\r\n              <Card\r\n                className=\"ant-card\"\r\n                key={event.id}\r\n                style={{ margin: \"1em\" }}\r\n              >\r\n                <img\r\n                  src={event.images[0]}\r\n                  alt=\"img\"\r\n                  className=\"event-img\"\r\n                ></img>\r\n                <div className=\"details\">\r\n                  <h1 className=\"event-heading\">{event.name}</h1>\r\n                  <p className=\"my-events-description\">{event.description}</p>\r\n                  <div className=\"my-events-buttons\">\r\n                    <div>\r\n                      <button\r\n                        className=\"view-more-button\"\r\n                        onClick={() => props.history.push(`event/${event.id}`)}\r\n                      >\r\n                        {\" \"}\r\n                        View More\r\n                      </button>\r\n                    </div>\r\n                    <div>\r\n                      <button\r\n                        onClick={() => props.deleteEvent(event)}\r\n                        className=\"delete-button\"\r\n                      >\r\n                        Delete Event\r\n                      </button>\r\n                    </div>\r\n                    <div>\r\n                      <button\r\n                        className=\"edit-button\"\r\n                        onClick={() => {\r\n                          props\r\n                            .fetchValues(event.id, props.events)\r\n                            .then(res => history.push(\"/editForm\"));\r\n                        }}\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"delete-edit-icons\">\r\n                      <Icon\r\n                        type=\"delete\"\r\n                        className=\"delete\"\r\n                        onClick={() => props.deleteEvent(event)}\r\n                      />\r\n                      <Icon\r\n                        type=\"edit\"\r\n                        className=\"edit\"\r\n                        onClick={() => {\r\n                          props\r\n                            .fetchValues(event.id, props.events)\r\n                            .then(res => history.push(\"/editForm\"));\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Card>\r\n            ))}\r\n        </div>\r\n        <div className=\"error-div\">\r\n          {props.error === true && (\r\n            <Alert\r\n              style={{\r\n                margin: \"1em\",\r\n                width: \"300px\",\r\n                textAlign: \"center\"\r\n              }}\r\n              type=\"error\"\r\n              message=\"Something went wrong\"\r\n              className=\"error-alert\"\r\n            ></Alert>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    events: state.firestore.ordered.Events,\r\n    user: state.firebase.auth.uid,\r\n    error: state.errorReducer\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  deleteEvent,\r\n  fetchValues\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyEvents);\r\n","import React from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport { Icon } from \"antd\";\r\n\r\nconst EventDetailMap = ({ latitude, longitude }) => {\r\n  const center = [latitude, longitude];\r\n  const zoom = 11;\r\n\r\n  const Marker = () => (\r\n    <Icon\r\n      type=\"environment\"\r\n      style={{\r\n        color: \"red\",\r\n        fontSize: \"40px\"\r\n      }}\r\n    />\r\n  );\r\n  return (\r\n    <div>\r\n      <div style={{ height: \"400px\", width: \"50%\", margin: \"1em\" }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: \"AIzaSyB3bAtv0hxR8NC4AVX1WwzoeX8BOZ2zNSk\" }}\r\n          defaultCenter={center}\r\n          defaultZoom={zoom}\r\n        >\r\n          <Marker lat={latitude} lng={longitude} text=\"My Marker\" />\r\n        </GoogleMapReact>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventDetailMap;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useFirestoreConnect } from \"react-redux-firebase\";\r\nimport { Icon, Carousel } from \"antd\";\r\nimport EventDetailMap from \"./EventDetailMap\";\r\nimport \"./EventDetail.css\";\r\nimport Header from \"./../../components/Header/Header\";\r\n\r\nconst EventDetail = (props) => {\r\n  const [isVisible, setVisibility] = React.useState(false);\r\n\r\n  const toggleVisibilityButoon = () => {\r\n    setVisibility(!isVisible);\r\n  };\r\n\r\n  useFirestoreConnect([{ collection: \"Events\" }]);\r\n\r\n  console.log(props.event.images);\r\n  return (\r\n    <div className=\"detailPage\">\r\n      <Header />\r\n      <div className=\"event-detail-div\">\r\n        <div className=\"img-name\">\r\n          <Carousel autoplay>\r\n            {props.event.images &&\r\n              props.event.images.map((image) => (\r\n                <img src={image} alt=\"img\" className=\"event-detail-img\" />\r\n              ))}\r\n          </Carousel>\r\n\r\n          <div className=\"event-details-div\">\r\n            <div>\r\n              <h1 className=\"event-name-heading \">{props.event.name}</h1>\r\n            </div>\r\n\r\n            <div className=\"detail-field\">\r\n              <div>\r\n                <span>\r\n                  <Icon type=\"phone\" className=\"event-detail-icon\" />\r\n                </span>\r\n                <span style={{ fontSize: \"18px\", color: \"#637d96\" }}>\r\n                  Contact:\r\n                </span>\r\n              </div>\r\n\r\n              <span className=\"event-span\">{props.event.contactNumber}</span>\r\n            </div>\r\n            <div className=\"detail-field\">\r\n              <div>\r\n                <span>\r\n                  <Icon type=\"user\" className=\"event-detail-icon\" />\r\n                </span>\r\n                <span style={{ fontSize: \"18px\", color: \"#637d96\" }}>\r\n                  Maximum Members:\r\n                </span>\r\n              </div>\r\n              <span className=\"event-span\">{props.event.maxMembers}</span>\r\n            </div>\r\n            <div className=\"detail-field\">\r\n              <div>\r\n                <span>\r\n                  {\" \"}\r\n                  <Icon type=\"tag\" className=\"event-detail-icon\" />\r\n                </span>\r\n                <span style={{ fontSize: \"18px\", color: \"#637d96\" }}>\r\n                  Ticket:\r\n                </span>\r\n              </div>\r\n\r\n              <span className=\"event-span\">{`${props.event.price} Rs`}</span>\r\n            </div>\r\n            <div className=\"event-description-div\">\r\n              <p className=\"event-description\">{props.event.description}</p>\r\n            </div>\r\n            <div className=\"show-map-div\">\r\n              <button onClick={toggleVisibilityButoon} className=\"show-map-btn\">\r\n                {isVisible === false ? \"Show Map\" : \"Hide Map\"}\r\n              </button>\r\n            </div>\r\n            <div className=\"map\">\r\n              {props.event.places && isVisible === true && (\r\n                <EventDetailMap\r\n                  latitude={props.event.places.lat}\r\n                  longitude={props.event.places.lng}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const events = state.firestore.ordered.Events;\r\n  const id = ownProps.match.params.id;\r\n  const event = events\r\n    ? events.filter((event) => event.id === id)[0]\r\n    : \"loading\";\r\n\r\n  return {\r\n    event,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(EventDetail);\r\n","import { useHistory } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { Input } from \"antd\";\r\nimport { Upload, Button, Icon } from \"antd\";\r\nimport { Formik } from \"formik\";\r\nimport \"./CreateEvent.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateValues, uploadImage } from \"./../../actions\";\r\nimport PlacesInput from \"./PlacesInput\";\r\nimport Header from './../Header/Header';\r\n\r\nconst CreateEvent = props => {\r\n  let history = useHistory();\r\n\r\n \r\n\r\n  let uploader;\r\n  const imageUpload = file => {\r\n    console.log(file.fileList);\r\n    uploader = file.fileList;\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: props.obj && props.obj.name,\r\n        maxMembers: props.obj && props.obj.maxMembers,\r\n        description: props.obj && props.obj.description,\r\n        price: props.obj && props.obj.price,\r\n        contactNumber: props.obj && props.obj.contactNumber,\r\n        places: \"\"\r\n       \r\n      }}\r\n      onSubmit={values => {\r\n        props.updateValues(\r\n          props.obj.id,\r\n          values.name,\r\n          values.description,\r\n          values.price,\r\n          values.maxMembers,\r\n          values.contactNumber,\r\n          values.places,\r\n          history\r\n        );\r\n        props.isUpdated === true && props.history.push(\"/MyEvents\");\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        setFieldValue\r\n      }) => (\r\n        <>\r\n        <Header/>\r\n          <div className=\"form-container\">\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"eventName\">Event Name</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Event name\"\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  onChange={handleChange}\r\n                  value={values.name}\r\n                ></Input>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"maxMembers\">Maxium Members</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  id=\"maxMembers\"\r\n                  name=\"maxMembers\"\r\n                  onChange={handleChange}\r\n                  value={values.maxMembers}\r\n                ></Input>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"description\">Event Description</label>\r\n                <Input.TextArea\r\n                  placeholder=\"Describe your event....\"\r\n                  type=\"text\"\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  autoSize={true}\r\n                  maxLength={1000}\r\n                  onChange={handleChange}\r\n                  value={values.description}\r\n                ></Input.TextArea>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"price\">Price per ticket</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  id=\"price\"\r\n                  name=\"price\"\r\n                  onChange={handleChange}\r\n                  value={values.price}\r\n                ></Input>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"contactNumber\">Contact Number</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  id=\"contactNumber\"\r\n                  name=\"contactNumber\"\r\n                  onChange={handleChange}\r\n                  value={values.contactNumber}\r\n                ></Input>\r\n              </div>\r\n\r\n              <div className=\"form-field\">\r\n                <label>Venue</label>\r\n                <PlacesInput setFieldValue={setFieldValue} />\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <Upload onChange={imageUpload} multiple>\r\n                  <Button>\r\n                    <Icon type=\"upload\" /> Upload\r\n                  </Button>\r\n                </Upload>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <button\r\n                  className=\"create-event-button\"\r\n                  onClick={handleSubmit}\r\n                  type=\"submit\"\r\n                >\r\n                  Save\r\n                \r\n                </button>\r\n              </div>\r\n              \r\n            </form>\r\n          </div>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    url: state.imageUpload.url,\r\n    createrId: state.firebase.auth.uid,\r\n    imageUpload: state.imageUpload,\r\n    obj: state.updateEvent[0],\r\n    isUpdated: state.updateEvent.isUpdated,\r\n    loading: state.loadingReducer\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  updateValues,\r\n  uploadImage\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateEvent);\r\n","import React from \"react\";\r\nimport \"./LandingPage.css\";\r\nimport { Button, Icon } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst LandingPage = () => {\r\n  return (\r\n    <div className=\"landing-page\">\r\n      <p className=\"landing-page-heading\">Events</p>\r\n      <NavLink to=\"/homePage\">\r\n        <button className=\"landing-page-button\">\r\n          Get Started <Icon type=\"arrow-right\" className=\"landing-page-icon\" />\r\n        </button>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React, { Component } from \"react\";\r\nimport HomePage from \"./components/HomePage\";\r\nimport LoginForm from \"./components/form/LoginForm\";\r\nimport RegisterForm from \"./components/form/RegisterForm\";\r\nimport CreateEvent from \"./components/form/CreateEvent\";\r\nimport MyEvents from \"./components/events/MyEvents\";\r\nimport EvenDetail from \"./components/events/EventDetail\";\r\nimport EditForm from \"./components/form/EditForm\";\r\nimport LandingPage from \"./components/LandingPage\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={LandingPage}></Route>\r\n            <Route exact path=\"/homePage\" component={HomePage}></Route>\r\n            <Route path=\"/login\" component={LoginForm}></Route>\r\n            <Route path=\"/register\" component={RegisterForm}></Route>\r\n            <Route path=\"/createEvent\" component={CreateEvent}></Route>\r\n            <Route path=\"/MyEvents\" component={MyEvents}></Route>\r\n            <Route path=\"/event/:id\" component={EvenDetail}></Route>\r\n            <Route path=\"/editForm\" component={EditForm} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","let events = [];\r\n\r\nexport default (state = events, action) => {\r\n    switch (action.type) {\r\n        case \"CREATE_EVENT\":\r\n            return [...state, action.event];\r\n        case \"ERROR\":\r\n            return state;\r\n        case \"DELETED\":\r\n            return state;\r\n        case \"NOT_DELETED\":\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};","const initialState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"Login Error\");\r\n      return {\r\n        ...state\r\n  \r\n      };\r\n\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"success\");\r\n      return {\r\n        ...state\r\n  \r\n      };\r\n\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"signout success\");\r\n      return {\r\n        ...state\r\n      };\r\n\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"signup success\");\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"signup fail\");\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      };\r\n\r\n      case \"SIGNED_IN_WITH_GOOGLE\" :\r\n        return{\r\n          ...state,\r\n          authError:null\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","\r\n\r\nlet urls = [];\r\n\r\nconst imageUpload = (state = urls, action) => {\r\n  switch (action.type) {\r\n    case \"UPLOAD_COMPLETE\":\r\n      return [...state, action.payload];\r\n    case \"PROGRESS\":\r\n      return state; \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default imageUpload;\r\n\r\n\r\n","\r\n\r\nlet initialState = {\r\n  fetchedValues: [],\r\n  isUpdated: false\r\n};\r\n\r\nconst updateEvent = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"FETCHED_VALUES\":\r\n      return action.payload;\r\n    case \"UPDATED\":\r\n      return {\r\n        ...state,\r\n        isUpdated: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default updateEvent;\r\n","const loadingReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case \"LOADING\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loadingReducer;\r\n","const errorReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case \"ERROR_CATCHED\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default errorReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport eventsReducers from \"./eventsReducers\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport authReducer from \"./authReducer\";\r\nimport imageUpload from \"./imageUpload\";\r\nimport updateEvent from \"./updateEvent\";\r\nimport loadingReducer from \"./loadingReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\n\r\nexport default combineReducers({\r\n  events: eventsReducers,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer,\r\n  auth: authReducer,\r\n  imageUpload,\r\n  updateEvent,\r\n  loadingReducer,\r\n  errorReducer\r\n});\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport 'firebase/storage';\r\nconst config = {\r\n  apiKey: \"AIzaSyCy_0S_rsb8MQJRuEAUwB-YME-4Nl6nEFw\",\r\n  authDomain: \"event-management-app-9f3ab.firebaseapp.com\",\r\n  databaseURL: \"https://event-management-app-9f3ab.firebaseio.com\",\r\n  projectId: \"event-management-app-9f3ab\",\r\n  storageBucket: \"event-management-app-9f3ab.appspot.com\",\r\n  messagingSenderId: \"976750584787\",\r\n  appId: \"1:976750584787:web:4a33fc4aa2bd6b34dec526\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nfirebase.firestore();\r\n\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { compose, createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createFirestoreInstance } from \"redux-firestore\";\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport firebase from \"./config/firebase\";\r\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\r\n\r\nconst rrfConfig = {\r\n  userProfile: \"users\",\r\n  useFirestoreForProfile: true\r\n};\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// const composeEnhancers =\r\n//   (typeof window !== \"undefined\" &&\r\n//     window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n//   compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  {},\r\n  composeEnhancers(applyMiddleware(thunk.withExtraArgument(getFirebase)))\r\n);\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance\r\n};\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ReactReduxFirebaseProvider {...rrfProps}>\r\n      <App />\r\n    </ReactReduxFirebaseProvider>\r\n  </Provider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}