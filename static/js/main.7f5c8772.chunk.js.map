{"version":3,"sources":["components/events/EventList.jsx","actions/index.js","components/Header/Header.jsx","components/HomePage.jsx","components/form/LoginForm.jsx","components/form/RegisterForm.jsx","components/form/PlacesInput.jsx","components/form/CreateEvent.jsx","components/events/MyEvents.jsx","components/events/EventDetailMap.jsx","components/events/EventDetail.jsx","components/form/EditForm.jsx","components/LandingPage.jsx","App.js","serviceWorker.js","reducers/eventsReducers.js","reducers/authReducer.js","reducers/imageUpload.js","reducers/updateEvent.js","reducers/loadingReducer.js","reducers/errorReducer.js","reducers/index.js","config/firebase.js","index.js"],"names":["connect","state","events","firestore","ordered","Events","name","firebase","profile","props","console","log","useFirestoreConnect","collection","eventList","map","event","className","size","src","images","alt","description","to","id","type","uploadImage","files","dispatch","getState","getFirebase","a","payload","uploadImages","imageUrl","Promise","resolve","reject","imageUrls","i","file","uploadTask","storage","ref","put","originFileObj","on","snapshot","error","getDownloadURL","push","length","uid","auth","signOut","then","catch","err","setTimeout","React","useState","isOpen","setIsOpen","history","useHistory","menu","Item","Divider","onClick","split","overlay","visible","placement","HomePage","this","style","margin","width","textAlign","message","Component","errorReducer","validationSchema","Yup","shape","email","required","password","mapDispatchToProps","signIn","credentials","signInWithEmailAndPassword","signInWithGoogle","parameter","login","provider","res","authError","isEmpty","initialValues","onSubmit","values","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","htmlFor","onChange","value","onBlur","Password","color","textDecoration","cursor","min","contact","confirmPassword","when","is","val","oneOf","register","newUser","getFirestore","createUserWithEmailAndPassword","doc","user","set","placeholder","fetchedValues","updateEvent","setFieldValue","placesField","address","setAddress","lat","lng","setCoordinates","handleSelect","geocodeByAddress","results","getLatLng","latLng","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","height","suggestion","createEvent","add","url","imageUpload","creatorId","loadingReducer","uploader","fileList","maxMembers","price","contactNumber","places","urls","creator","TextArea","autoSize","minRows","maxRows","multiple","deleteEvent","e","delete","fetchValues","filter","myEvents","EventDetailMap","latitude","longitude","center","Marker","fontSize","bootstrapURLKeys","key","defaultCenter","defaultZoom","text","ownProps","match","params","isVisible","setVisibility","autoplay","image","updateValues","update","createrId","obj","isUpdated","maxLength","LandingPage","App","exact","path","component","LoginForm","RegisterForm","CreateEvent","MyEvents","EvenDetail","EditForm","Boolean","window","location","hostname","initialState","authReducer","action","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","withExtraArgument","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f5c8772.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card, Button, Icon } from \"antd\";\r\nimport \"./EventList.css\";\r\nimport { useFirestoreConnect } from \"react-redux-firebase\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst EventList = props => {\r\n  console.log(props);\r\n  useFirestoreConnect([{ collection: \"Events\" }]);\r\n  let eventList =\r\n    props.events &&\r\n    props.events.map(event => {\r\n      return (\r\n        <Card className=\"ant-card\" key={event.id} size=\"default\">\r\n          <img src={event.images[0]} alt=\"img\" className=\"event-img\" />\r\n          <div className=\"details\">\r\n            <h1 className=\"event-heading\">{event.name}</h1>\r\n            <p>{event.description}</p>\r\n            <NavLink to={`event/${event.id}`}>\r\n              <button className=\"view-more\">\r\n                View More <Icon type=\"arrow-right\" className=\"view-more-icon\" />{\" \"}\r\n              </button>\r\n            </NavLink>\r\n          </div>\r\n        </Card>\r\n      );\r\n    });\r\n  return <div className=\"eventList\">{eventList}</div>;\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    events: state.firestore.ordered.Events,\r\n    name: state.firebase.profile.name\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(EventList);\r\n","import firebase from \"firebase/app\";\r\n\r\nexport const createEvent = event => {\r\n  return (dispatch, getFirebase, getState) => {\r\n    dispatch({ type: \"LOADING\", payload: true });\r\n    const firestore = firebase.firestore();\r\n    firestore\r\n      .collection(\"Events\")\r\n      .add({\r\n        ...event\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"CREATE_EVENT\", event });\r\n        dispatch({ type: \"LOADING\", payload: false });\r\n      })\r\n      .catch(err => {\r\n        // dispatch({ type: \"ERROR\", err });\r\n        dispatch({ type: \"ERROR_CATCHED\", payload: true });\r\n        setTimeout(() => {\r\n          dispatch({ type: \"ERROR_CATCHED\", payload: false });\r\n        }, 10000);\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteEvent = e => {\r\n  return (dispatch, getFirebase, getState) => {\r\n    const firestore = firebase.firestore();\r\n    firestore\r\n      .collection(\"Events\")\r\n      .doc(e.id)\r\n      .delete()\r\n      .then(res => {\r\n        dispatch({ type: \"DELETED\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"ERROR_CATCHED\", payload: true });\r\n        setTimeout(() => {\r\n          dispatch({ type: \"ERROR_CATCHED\", payload: false });\r\n        }, 10000);\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateValues = (\r\n  id,\r\n  name,\r\n  description,\r\n  price,\r\n  maxMembers,\r\n  contactNumber,\r\n  places,\r\n  history\r\n) => {\r\n  return (dispatch, getFirebase, getState) => {\r\n    dispatch({ type: \"LOADING\", payload: true });\r\n    const firestore = firebase.firestore();\r\n    firestore\r\n      .collection(\"Events\")\r\n      .doc(id)\r\n      .update({\r\n        name,\r\n        description,\r\n        price,\r\n        maxMembers,\r\n        contactNumber,\r\n        places\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"LOADING\", payload: false });\r\n        history.push(\"/MyEvents\");\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"ERROR_CATCHED\", payload: true });\r\n        setTimeout(() => {\r\n          dispatch({ type: \"ERROR_CATCHED\", payload: false });\r\n        }, 10000);\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchValues = (id, events) => {\r\n  return dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        let values = events.filter(event => event.id === id);\r\n        if (values.length > 0) {\r\n          dispatch({ type: \"FETCHED_VALUES\", payload: values });\r\n          return resolve(values);\r\n        }\r\n      } catch (error) {\r\n        return resolve(false);\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const signIn = (credentials, history) => {\r\n  return (dispatch, getState, getFirebase) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n        history.push(\"/homePage\");\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        // dispatch({ type: \"LOGIN_ERROR\", err });\r\n        dispatch({ type: \"ERROR_CATCHED\", payload: true });\r\n        setTimeout(() => {\r\n          dispatch({ type: \"ERROR_CATCHED\", payload: false });\r\n        }, 10000);\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, getFirebase) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"ERROR_CATCHED\", payload: true });\r\n        setTimeout(() => {\r\n          dispatch({ type: \"ERROR_CATCHED\", payload: false });\r\n        }, 10000);\r\n      });\r\n  };\r\n};\r\n\r\nexport const register = (newUser, history) => {\r\n  return (dispatch, getState, getFirebase, getFirestore) => {\r\n    console.log(\"fdsfds\", history);\r\n    const firebase = getFirebase();\r\n    const firestore = firebase.firestore();\r\n    return firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then(res => {\r\n        console.log(res, \"resss\");\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(res.user.uid)\r\n          .set({\r\n            name: newUser.name,\r\n            contact: newUser.contact\r\n            // id: newUser.uid\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n        history.push(\"/homePage\");\r\n        \r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"ERROR_CATCHED\", payload: true });\r\n        setTimeout(() => {\r\n          dispatch({ type: \"ERROR_CATCHED\", payload: false });\r\n        }, 10000);\r\n      });\r\n  };\r\n};\r\n\r\nexport const signInWithGoogle = parameter => {\r\n  return (dispatch, getState, getFirebase) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .login({\r\n        provider: \"google\",\r\n        type: \"popup\"\r\n      })\r\n      .then(res => {\r\n        console.log(\"res\", res);\r\n        dispatch({ type: \"SIGNED_IN_WITH_GOOGLE\" });\r\n        parameter.push(\"/homePage\");\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"ERROR_CATCHED\", payload: true });\r\n        setTimeout(() => {\r\n          dispatch({ type: \"ERROR_CATCHED\", payload: false });\r\n        }, 10000);\r\n      });\r\n  };\r\n};\r\n\r\nexport const uploadImage = (files, name) => {\r\n  console.log(\"incoming files\", files);\r\n  return async (dispatch, getState, getFirebase) => {\r\n    try {\r\n      dispatch({ type: \"LOADING\", payload: true });\r\n      let firebase = getFirebase();\r\n      const imageUrl = await uploadImages(files, name, firebase, dispatch);\r\n      console.log(imageUrl);\r\n      dispatch({ type: \"UPLOAD_COMPLETE\", payload: imageUrl });\r\n      dispatch({ type: \"LOADING\", payload: false });\r\n      return Promise.resolve(imageUrl);\r\n    } catch (error) {\r\n      return Promise.resolve(false);\r\n    }\r\n  };\r\n};\r\n\r\nconst uploadImages = (files, name, firebase, dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    let imageUrls = [];\r\n    try {\r\n      for (let i = 0; i < files.length; i++) {\r\n        const file = files[i];\r\n        const uploadTask = firebase\r\n          .storage()\r\n          .ref(`images/${name}/${file.name}`)\r\n          .put(file.originFileObj);\r\n\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          snapshot => {\r\n            console.log(snapshot);\r\n            dispatch({ type: \"PROGRESS\", payload: \"progressing\" });\r\n          },\r\n          error => {\r\n            console.log(error);\r\n            reject(error);\r\n          },\r\n          async () => {\r\n            let imageUrl = await uploadTask.snapshot.ref.getDownloadURL();\r\n            console.log(imageUrl);\r\n            imageUrls.push(imageUrl);\r\n            if (imageUrls.length === files.length) {\r\n              console.log({ imageUrls });\r\n              resolve(imageUrls);\r\n            }\r\n          }\r\n        );\r\n      }\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"./../../actions\";\r\nimport { Menu, Dropdown, Icon } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  let history = useHistory();\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item key=\"0\">\r\n        <NavLink to=\"/createEvent\">Create Event</NavLink>\r\n      </Menu.Item>\r\n      <Menu.Divider />\r\n      <Menu.Item\r\n        key=\"1\"\r\n        onClick={() => {\r\n          history.push(\"/homePage\");\r\n          props.signOut();\r\n        }}\r\n      >\r\n        Sign Out\r\n      </Menu.Item>\r\n      <Menu.Divider />\r\n      <Menu.Item key=\"3\">\r\n        <NavLink to=\"/MyEvents\">My Events</NavLink>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1>EVENTS</h1>\r\n        <div className=\"buttons\">\r\n          {props.uid ? (\r\n            <div className=\"signed-in-header-button\">\r\n              <div className=\"signed-in-div\">\r\n                <div className=\"initials\">\r\n                  {props.name && props.name.split(\" \")[0][0]}\r\n                </div>\r\n              </div>\r\n              <Dropdown overlay={menu} visible={isOpen} placement=\"bottomRight\">\r\n                <button\r\n                  className=\"profile-name\"\r\n                  onClick={() => {\r\n                    setIsOpen(!isOpen);\r\n                  }}\r\n                >\r\n                  {props.name}\r\n                  <Icon type=\"caret-down\" className=\"caret-down-icon\" />\r\n                </button>\r\n              </Dropdown>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {\" \"}\r\n              <div className=\"signed-out-header-buttons\">\r\n                <NavLink to=\"/login\">\r\n                  <button type=\"primary\" className=\"header-button signIn\">\r\n                    Sign In\r\n                  </button>\r\n                </NavLink>\r\n                ;{\" \"}\r\n                <NavLink to=\"/register\">\r\n                  <button className=\"header-button sign-up\">Register</button>\r\n                </NavLink>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signOut: () => {\r\n      dispatch(signOut());\r\n    }\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    uid: state.firebase.auth.uid,\r\n    events: state.firestore.ordered.Events,\r\n    // error: state.errorReducer,\r\n    name: state.firebase.profile.name\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React, { Component } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./HomePage.css\";\r\nimport { Layout, Alert } from \"antd\";\r\nimport EventList from \"./events/EventList\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./Header/Header\";\r\n\r\nclass HomePage extends Component {\r\n  render() {\r\n    const { error } = this.props;\r\n    return (\r\n      <div className=\"App\">\r\n        <Layout className=\"layout-style\">\r\n          <Header />\r\n          <section className=\"events-list\">\r\n            <EventList />\r\n          </section>\r\n          <div className=\"error-div\">\r\n            {this.props.error === true && (\r\n              <Alert\r\n                style={{\r\n                  margin: \"1em\",\r\n                  width: \"300px\",\r\n                  textAlign: \"center\"\r\n                }}\r\n                type=\"error\"\r\n                message=\"Something went wrong.\"\r\n              ></Alert>\r\n            )}\r\n          </div>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    error: state.errorReducer\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HomePage);\r\n","import { useHistory } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Input, Button, Icon } from \"antd\";\r\nimport \"./LoginForm.css\";\r\nimport { signIn, signInWithGoogle } from \"./../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Alert } from \"antd\";\r\nimport Header from \"./../Header/Header\";\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .required(\"Enter Your Email Address\")\r\n    .email(\"Invalid Email\"),\r\n  password: Yup.string().required(\"Enter your password\")\r\n});\r\n\r\nconst LoginForm = props => {\r\n  let history = useHistory();\r\n  console.log(props);\r\n  console.log(\"component appeared\");\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n          password: \"\"\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={values => {\r\n          props.signIn(values, history);\r\n         \r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting\r\n        }) => (\r\n          <>\r\n            <Header />\r\n            <div className=\"container\">\r\n              <div className=\"login-form-container\">\r\n                <form className=\"login-form\">\r\n                  <div className=\"form-field\">\r\n                    <label htmlFor=\"email\">Email Address</label>\r\n                    <Input\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      onChange={handleChange}\r\n                      value={values.email}\r\n                      onBlur={handleBlur}\r\n                    ></Input>\r\n                    {errors.email && touched.email ? (\r\n                      <div className=\"Error-message\">{errors.email}</div>\r\n                    ) : null}\r\n                  </div>\r\n                  <div className=\"form-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <Input.Password\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      onChange={handleChange}\r\n                      value={values.password}\r\n                      onBlur={handleBlur}\r\n                    ></Input.Password>\r\n                    {errors.password && touched.password ? (\r\n                      <div className=\"Error-message\">{errors.password}</div>\r\n                    ) : null}\r\n                  </div>\r\n                  <div className=\"form-field\">\r\n                    <Button type=\"primary submit\" onClick={handleSubmit}>\r\n                      Login\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"partition\">\r\n                    <hr></hr>\r\n                    <span className=\"partition-span\">OR</span>\r\n                    <hr></hr>\r\n                  </div>\r\n                </form>\r\n                <div className=\"form-field\">\r\n                  <button\r\n                    className=\"login-button-google\"\r\n                    type=\"submit\"\r\n                    onClick={() => {\r\n                      props.signInWithGoogle(props.history);\r\n                   \r\n                    }}\r\n                  >\r\n                    <Icon type=\"google\" className=\"google-icon\" />\r\n                    Login with Google\r\n                  </button>\r\n                </div>\r\n                <div className=\"form-field\">\r\n                  <p>\r\n                    Don't have an account.\r\n                    <span\r\n                      style={{\r\n                        color: \"blue\",\r\n                        textDecoration: \"underline\",\r\n                        margin: \"1px\",\r\n                        cursor: \"pointer\"\r\n                      }}\r\n                      onClick={() => {\r\n                        props.history.push(\"/register\");\r\n                      }}\r\n                    >\r\n                      Register\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"error-div\">\r\n                {props.error === true && (\r\n                  <Alert\r\n                    style={{\r\n                      margin: \"1em\",\r\n                      width: \"300px\",\r\n                      textAlign: \"center\"\r\n                    }}\r\n                    type=\"error\"\r\n                    message=\"Invalid Email or Password\"\r\n                  ></Alert>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    isEmpty: state.firebase.auth.isEmpty,\r\n    error: state.errorReducer\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  signIn,\r\n  signInWithGoogle\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","import { useHistory } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Input, Button, Alert } from \"antd\";\r\nimport \"./RegisterForm.css\";\r\nimport { register } from \"./../../actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./../Header/Header\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .required(\"Must enter your name\")\r\n    .min(6, \"too short\"),\r\n  contact: Yup.number().required(\"Must give number\"),\r\n  email: Yup.string()\r\n    .required(\"Must give email\")\r\n    .email(\"Invalid Email\"),\r\n  password: Yup.string()\r\n    .required(\"Enter your Password\")\r\n    .min(8, \"Too short\"),\r\n  confirmPassword: Yup.string().when(\"password\", {\r\n    is: val => (val && val.length > 0 ? true : false),\r\n    then: Yup.string().oneOf(\r\n      [Yup.ref(\"password\")],\r\n      \"Both password need to be the same\"\r\n    )\r\n  })\r\n});\r\n\r\nconst RegisterForm = props => {\r\n  // let history = useHistory();\r\n  // console.log(history, \"history \");\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n          contact: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          confirmPassword: \"\"\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={values => {\r\n\r\n          props.register(values, props.history)\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting\r\n        }) => (\r\n          <>\r\n            <Header />\r\n            <div className=\"register-form-container\">\r\n              <form className=\"form\">\r\n                <div className=\"form-field\">\r\n                  <label htmlFor=\"name\">Name</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter your name\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    onChange={handleChange}\r\n                    value={values.name}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {errors.name && touched.name ? (\r\n                    <div className=\"Error-message\">{errors.name}</div>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-field\">\r\n                  <label htmlFor=\"contact\">Contact</label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    placeholder=\"Enter contact Number\"\r\n                    id=\"contact\"\r\n                    name=\"contact\"\r\n                    onChange={handleChange}\r\n                    value={values.contact}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {errors.contact && touched.contact ? (\r\n                    <div className=\"Error-message\">{errors.contact}</div>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-field\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email Address\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    onChange={handleChange}\r\n                    value={values.email}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {errors.email && touched.email ? (\r\n                    <div className=\"Error-message\">{errors.email}</div>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-field\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input.Password\r\n                    type=\"password\"\r\n                    placeholder=\"Enter your password\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    onChange={handleChange}\r\n                    value={values.password}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {errors.password && touched.password ? (\r\n                    <div className=\"Error-message\">{errors.password}</div>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-field\">\r\n                  <label htmlFor=\"password\">Confirm Password</label>\r\n                  <Input.Password\r\n                    type=\"password\"\r\n                    placeholder=\"Enter the confirmed password\"\r\n                    id=\"confirmPassword\"\r\n                    name=\"confirmPassword\"\r\n                    onChange={handleChange}\r\n                    value={values.confirmPassword}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {errors.confirmPassword ? (\r\n                    <div className=\"Error-message\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-field Button\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    onClick={handleSubmit}\r\n                    className=\"register-button\"\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n                <div className=\"form-field\">\r\n                  <p>\r\n                    Already have an account.{\" \"}\r\n                    <span\r\n                      style={{\r\n                        color: \"blue\",\r\n                        textDecoration: \"underline\",\r\n                        margin: \"1px\",\r\n                        cursor: \"pointer\"\r\n                      }}\r\n                      onClick={() => {\r\n                        props.history.push(\"/login\");\r\n                      }}\r\n                    >\r\n                      Sign In\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n              </form>\r\n              <div className=\"error-div\">\r\n                {props.error === true && (\r\n                  <Alert\r\n                    style={{\r\n                      margin: \"1em\",\r\n                      width: \"300px\",\r\n                      textAlign: \"center\"\r\n                    }}\r\n                    type=\"error\"\r\n                    message=\"Something went wrong\"\r\n                  ></Alert>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    error: state.errorReducer\r\n  };\r\n};\r\n\r\nconst mapDisptachToProps = dispatch => {\r\n  return {\r\n    register:(newUser, history) => {\r\n      dispatch(register(newUser, history));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDisptachToProps)(RegisterForm);\r\n","import React, { useState } from \"react\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng\r\n} from \"react-places-autocomplete\";\r\nimport { Input } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./PlacesInput.css\";\r\n\r\nconst PlacesInput = ({ setFieldValue, placesField }, props) => {\r\n  const [address, setAddress] = React.useState(\"\");\r\n  const [coordinates, setCoordinates] = React.useState({\r\n    lat: null,\r\n    lng: null\r\n  });\r\n\r\n  const handleSelect = async value => {\r\n    console.log(value);\r\n    const results = await geocodeByAddress(value);\r\n    const latLng = await getLatLng(results[0]);\r\n    setAddress(value);\r\n    setCoordinates(latLng);\r\n    console.log(latLng);\r\n    setFieldValue(\"places\", latLng);\r\n  };\r\n\r\n  const handleChange = address => {\r\n    setAddress(address);\r\n  };\r\n  // const handleClick = value => {\r\n  //   setAddress(value);\r\n  // };\r\n  return (\r\n    <div>\r\n      <PlacesAutocomplete\r\n        value={address}\r\n        onChange={handleChange}\r\n        onSelect={handleSelect}\r\n      >\r\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n          <>\r\n            <Input\r\n              style={{\r\n                height: \"32px\"\r\n              }}\r\n              {...getInputProps({\r\n                placeholder: \"Type your address\"\r\n              })}\r\n            ></Input>\r\n            <div>{loading ? <div>...loading</div> : null}</div>\r\n            {suggestions.map(suggestion => {\r\n              return (\r\n                <div\r\n                  \r\n                  {...getSuggestionItemProps}\r\n                >\r\n                  {suggestion.description}\r\n                </div>\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n      </PlacesAutocomplete>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    fetchedValues: state.updateEvent[0]\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(PlacesInput);\r\n","import { useHistory } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { Input } from \"antd\";\r\nimport { Upload, Button, Icon, Alert } from \"antd\";\r\nimport { Formik } from \"formik\";\r\nimport \"./CreateEvent.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { createEvent, uploadImage } from \"./../../actions\";\r\nimport PlacesInput from \"./PlacesInput\";\r\nimport Header from \"./../Header/Header\";\r\n\r\nconst CreateEvent = props => {\r\n  // let history = useHistory();\r\n\r\n  console.log(props, \"props\");\r\n\r\n  let uploader;\r\n  const imageUpload = file => {\r\n    console.log(file.fileList);\r\n    uploader = file.fileList;\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: \"\",\r\n        maxMembers: \"\",\r\n        description: \"\",\r\n        price: \"\",\r\n        contactNumber: \"\",\r\n        places: \"\"\r\n    \r\n      }}\r\n      onSubmit={async values => {\r\n        const urls = await props.uploadImage(uploader, values.name);\r\n\r\n        props.createEvent({\r\n          ...values,\r\n          creator: props.creatorId,\r\n          images: urls\r\n        });\r\n        props.history.push(\"/homePage\");\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        setFieldValue\r\n      }) => (\r\n        <>\r\n          <Header />\r\n     \r\n          <div className=\"form-container\">\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"eventName\">Event Name</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Event name\"\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  onChange={handleChange}\r\n                  value={values.name}\r\n                ></Input>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"maxMembers\">Maxium Members</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  id=\"maxMembers\"\r\n                  name=\"maxMembers\"\r\n                  onChange={handleChange}\r\n                  value={values.maxMembers}\r\n                ></Input>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"description\">Event Description</label>\r\n                <Input.TextArea\r\n                  placeholder=\"Describe your event....\"\r\n                  type=\"text\"\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  // autoSize={true}\r\n                  autoSize={{ minRows: 1, maxRows: 7 }}\r\n                  onChange={handleChange}\r\n                  value={values.description}\r\n                ></Input.TextArea>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"price\">Price per ticket</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  id=\"price\"\r\n                  name=\"price\"\r\n                  onChange={handleChange}\r\n                  value={values.price}\r\n                ></Input>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"contactNumber\">Contact Number</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  id=\"contactNumber\"\r\n                  name=\"contactNumber\"\r\n                  onChange={handleChange}\r\n                  value={values.contactNumber}\r\n                ></Input>\r\n              </div>\r\n\r\n              <div className=\"form-field\">\r\n                <label>Venue</label>\r\n                <PlacesInput setFieldValue={setFieldValue} />\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <Upload onChange={imageUpload} multiple>\r\n                  <Button>\r\n                    <Icon type=\"upload\" /> Upload\r\n                  </Button>\r\n                </Upload>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <button\r\n                  className=\"create-event-button\"\r\n                  onClick={handleSubmit}\r\n                  type=\"submit\"\r\n                >\r\n                  Create Event\r\n                  {props.loading === true && (\r\n                    <Icon\r\n                      type=\"loading\"\r\n                      style={{ color: \"white\", margin: \"3px\" }}\r\n                    ></Icon>\r\n                  )}\r\n                </button>\r\n              </div>\r\n              {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\r\n            </form>\r\n            <div className=\"error-div\">\r\n              {props.error === true && (\r\n                <Alert\r\n                  style={{\r\n                    margin: \"1em\",\r\n                    width: \"300px\",\r\n                    textAlign: \"center\"\r\n                  }}\r\n                  type=\"error\"\r\n                  message=\"Something went wrong\"\r\n                ></Alert>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    url: state.imageUpload.url,\r\n    creatorId: state.firebase.auth.uid,\r\n    imageUpload: state.imageUpload,\r\n    fetchedValues: state.updateEvent,\r\n    loading: state.loadingReducer,\r\n    error: state.errorReducer\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  createEvent,\r\n  uploadImage\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateEvent);\r\n","import { useHistory } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card, Icon, Alert } from \"antd\";\r\nimport { useFirestoreConnect } from \"react-redux-firebase\";\r\nimport \"./MyEvents.css\";\r\n\r\nimport { deleteEvent, fetchValues } from \"./../../actions/\";\r\nimport Header from \"./../Header/Header\";\r\n\r\nconst MyEvents = props => {\r\n  let history = useHistory();\r\n  let myEvents;\r\n  useFirestoreConnect([{ collection: \"Events\" }]);\r\n  console.log(props.events, \"events\");\r\n\r\n  myEvents = props.events\r\n    ? props.events.filter(event => event.creator === props.user)\r\n    : null;\r\n\r\n\r\n  return (\r\n    <div className=\"my-events\">\r\n      <Header />\r\n      <div className=\"my-events-container\">\r\n        <div className=\"heading\">\r\n          <h1 className=\"my-events-heading\">My Events</h1>\r\n        </div>\r\n        <div className=\"my-events-list\">\r\n          {myEvents &&\r\n            myEvents.map(event => (\r\n              <Card\r\n                className=\"ant-card\"\r\n                key={event.id}\r\n                style={{ margin: \"1em\" }}\r\n              >\r\n                <img\r\n                  src={event.images[0]}\r\n                  alt=\"img\"\r\n                  className=\"event-img\"\r\n                ></img>\r\n                <div className=\"details\">\r\n                  <h1 className=\"event-heading\">{event.name}</h1>\r\n                  <p className=\"my-events-description\">{event.description}</p>\r\n                  <div className=\"my-events-buttons\">\r\n                    <div>\r\n                      <button\r\n                        className=\"view-more-button\"\r\n                        onClick={() => props.history.push(`event/${event.id}`)}\r\n                      >\r\n                        {\" \"}\r\n                        View More\r\n                      </button>\r\n                    </div>\r\n                    <div>\r\n                      <button\r\n                        onClick={() => props.deleteEvent(event)}\r\n                        className=\"delete-button\"\r\n                      >\r\n                        Delete Event\r\n                      </button>\r\n                    </div>\r\n                    <div>\r\n                      <button\r\n                        className=\"edit-button\"\r\n                        onClick={() => {\r\n                          props\r\n                            .fetchValues(event.id, props.events)\r\n                            .then(res => history.push(\"/editForm\"));\r\n                        }}\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"delete-edit-icons\">\r\n                      <Icon\r\n                        type=\"delete\"\r\n                        className=\"delete\"\r\n                        onClick={() => props.deleteEvent(event)}\r\n                      />\r\n                      <Icon\r\n                        type=\"edit\"\r\n                        className=\"edit\"\r\n                        onClick={() => {\r\n                          props\r\n                            .fetchValues(event.id, props.events)\r\n                            .then(res => history.push(\"/editForm\"));\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Card>\r\n            ))}\r\n        </div>\r\n        <div className=\"error-div\">\r\n          {props.error === true && (\r\n            <Alert\r\n              style={{\r\n                margin: \"1em\",\r\n                width: \"300px\",\r\n                textAlign: \"center\"\r\n              }}\r\n              type=\"error\"\r\n              message=\"Something went wrong\"\r\n              className=\"error-alert\"\r\n            ></Alert>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    events: state.firestore.ordered.Events,\r\n    user: state.firebase.auth.uid,\r\n    error: state.errorReducer\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  deleteEvent,\r\n  fetchValues\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyEvents);\r\n","import React from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport { Icon } from \"antd\";\r\n\r\nconst EventDetailMap = ({ latitude, longitude }) => {\r\n  const center = [latitude, longitude];\r\n  const zoom = 11;\r\n\r\n  const Marker = () => (\r\n    <Icon\r\n      type=\"environment\"\r\n      style={{\r\n        color: \"red\",\r\n        fontSize: \"40px\"\r\n      }}\r\n    />\r\n  );\r\n  return (\r\n    <div>\r\n      <div style={{ height: \"400px\", width: \"50%\", margin: \"1em\" }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: \"AIzaSyBmVNjj2wxiLjkFbbXfiuaH36kFJttvVhs\" }}\r\n          defaultCenter={center}\r\n          defaultZoom={zoom}\r\n        >\r\n          <Marker lat={latitude} lng={longitude} text=\"My Marker\" />\r\n        </GoogleMapReact>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventDetailMap;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useFirestoreConnect } from \"react-redux-firebase\";\r\nimport { Icon, Carousel } from \"antd\";\r\nimport EventDetailMap from \"./EventDetailMap\";\r\nimport \"./EventDetail.css\";\r\nimport Header from \"./../../components/Header/Header\";\r\n\r\nconst EventDetail = props => {\r\n  const [isVisible, setVisibility] = React.useState(false);\r\n\r\n  const toggleVisibilityButoon = () => {\r\n    setVisibility(!isVisible);\r\n  };\r\n\r\n  useFirestoreConnect([{ collection: \"Events\" }]);\r\n\r\n  console.log(props.event.images);\r\n  return (\r\n    <div className=\"detailPage\">\r\n      <Header />\r\n      <div className=\"event-detail-div\">\r\n        <div className=\"img-name\">\r\n          <Carousel autoplay>\r\n            {props.event.images &&\r\n              props.event.images.map(image => (\r\n                <img src={image} alt=\"img\" className=\"event-detail-img\" />\r\n              ))}\r\n          </Carousel>\r\n\r\n          <div className=\"event-details-div\">\r\n            <div>\r\n              <h1 className=\"event-name-heading \">{props.event.name}</h1>\r\n            </div>\r\n\r\n            <div className=\"contact-info\">\r\n              <Icon\r\n                type=\"phone\"\r\n               className='event-detail-icon'\r\n              />\r\n              <span className=\"event-span\">{props.event.contactNumber}</span>\r\n            </div>\r\n            <div>\r\n              <Icon\r\n                type=\"user\"\r\n                className='event-detail-icon'\r\n              />\r\n              <span className=\"event-span\">{props.event.maxMembers}</span>\r\n            </div>\r\n            <div>\r\n              <Icon\r\n                type=\"tag\"\r\n                className='event-detail-icon'\r\n              />\r\n              <span className=\"event-span\">{`${props.event.price} Rs`}</span>\r\n            </div>\r\n            <div className=\"event-description-div\">\r\n              <p className=\"event-description\">{props.event.description}</p>\r\n            </div>\r\n            <div className=\"show-map-div\">\r\n              <button onClick={toggleVisibilityButoon} className=\"show-map-btn\">\r\n                {isVisible === false ? \"Show Map\" : \"Hide Map\"}\r\n              </button>\r\n            </div>\r\n            <div className=\"map\">\r\n              {props.event.places && isVisible === true && (\r\n                <EventDetailMap\r\n                  latitude={props.event.places.lat}\r\n                  longitude={props.event.places.lng}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const events = state.firestore.ordered.Events;\r\n  const id = ownProps.match.params.id;\r\n  const event = events ? events.filter(event => event.id === id)[0] : \"loading\";\r\n\r\n  return {\r\n    event\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(EventDetail);\r\n","import { useHistory } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { Input } from \"antd\";\r\nimport { Upload, Button, Icon } from \"antd\";\r\nimport { Formik } from \"formik\";\r\nimport \"./CreateEvent.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateValues, uploadImage } from \"./../../actions\";\r\nimport PlacesInput from \"./PlacesInput\";\r\n\r\nconst CreateEvent = props => {\r\n  let history = useHistory();\r\n\r\n  console.log(props, \"props\");\r\n\r\n  let uploader;\r\n  const imageUpload = file => {\r\n    console.log(file.fileList);\r\n    uploader = file.fileList;\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: props.obj && props.obj.name,\r\n        maxMembers: props.obj && props.obj.maxMembers,\r\n        description: props.obj && props.obj.description,\r\n        price: props.obj && props.obj.price,\r\n        contactNumber: props.obj && props.obj.contactNumber,\r\n        places: \"\"\r\n       \r\n      }}\r\n      onSubmit={values => {\r\n        props.updateValues(\r\n          props.obj.id,\r\n          values.name,\r\n          values.description,\r\n          values.price,\r\n          values.maxMembers,\r\n          values.contactNumber,\r\n          values.places,\r\n          history\r\n        );\r\n        props.isUpdated === true && props.history.push(\"/MyEvents\");\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        setFieldValue\r\n      }) => (\r\n        <>\r\n          <h1 className=\"create-event-heading\">Edit Event</h1>\r\n          <div className=\"form-container\">\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"eventName\">Event Name</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Event name\"\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  onChange={handleChange}\r\n                  value={values.name}\r\n                ></Input>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"maxMembers\">Maxium Members</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  id=\"maxMembers\"\r\n                  name=\"maxMembers\"\r\n                  onChange={handleChange}\r\n                  value={values.maxMembers}\r\n                ></Input>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"description\">Event Description</label>\r\n                <Input.TextArea\r\n                  placeholder=\"Describe your event....\"\r\n                  type=\"text\"\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  autoSize={true}\r\n                  maxLength={1000}\r\n                  onChange={handleChange}\r\n                  value={values.description}\r\n                ></Input.TextArea>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"price\">Price per ticket</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  id=\"price\"\r\n                  name=\"price\"\r\n                  onChange={handleChange}\r\n                  value={values.price}\r\n                ></Input>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"contactNumber\">Contact Number</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  id=\"contactNumber\"\r\n                  name=\"contactNumber\"\r\n                  onChange={handleChange}\r\n                  value={values.contactNumber}\r\n                ></Input>\r\n              </div>\r\n\r\n              <div className=\"form-field\">\r\n                <label>Venue</label>\r\n                <PlacesInput setFieldValue={setFieldValue} />\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <Upload onChange={imageUpload} multiple>\r\n                  <Button>\r\n                    <Icon type=\"upload\" /> Upload\r\n                  </Button>\r\n                </Upload>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <button\r\n                  className=\"create-event-button\"\r\n                  onClick={handleSubmit}\r\n                  type=\"submit\"\r\n                >\r\n                  Save\r\n                \r\n                </button>\r\n              </div>\r\n              \r\n            </form>\r\n          </div>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    url: state.imageUpload.url,\r\n    createrId: state.firebase.auth.uid,\r\n    imageUpload: state.imageUpload,\r\n    obj: state.updateEvent[0],\r\n    isUpdated: state.updateEvent.isUpdated,\r\n    loading: state.loadingReducer\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  updateValues,\r\n  uploadImage\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateEvent);\r\n","import React from \"react\";\r\nimport \"./LandingPage.css\";\r\nimport { Button, Icon } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst LandingPage = () => {\r\n  return (\r\n    <div className=\"landing-page\">\r\n      <p className=\"landing-page-heading\">Events</p>\r\n      <NavLink to=\"/homePage\">\r\n        <button className=\"landing-page-button\">\r\n          Get Started <Icon type=\"arrow-right\" className=\"landing-page-icon\" />\r\n        </button>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React, { Component } from \"react\";\r\nimport HomePage from \"./components/HomePage\";\r\nimport LoginForm from \"./components/form/LoginForm\";\r\nimport RegisterForm from \"./components/form/RegisterForm\";\r\nimport CreateEvent from \"./components/form/CreateEvent\";\r\nimport MyEvents from \"./components/events/MyEvents\";\r\nimport EvenDetail from \"./components/events/EventDetail\";\r\nimport EditForm from \"./components/form/EditForm\";\r\nimport LandingPage from \"./components/LandingPage\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={LandingPage}></Route>\r\n            <Route exact path=\"/homePage\" component={HomePage}></Route>\r\n            <Route path=\"/login\" component={LoginForm}></Route>\r\n            <Route path=\"/register\" component={RegisterForm}></Route>\r\n            <Route path=\"/createEvent\" component={CreateEvent}></Route>\r\n            <Route path=\"/MyEvents\" component={MyEvents}></Route>\r\n            <Route path=\"/event/:id\" component={EvenDetail}></Route>\r\n            <Route path=\"/editForm\" component={EditForm} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","let events = [];\r\n\r\nexport default (state = events, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_EVENT\":\r\n      // console.log(\"create event\", action.event);\r\n      return [...state, action.event];\r\n    case \"ERROR\":\r\n      // console.log(\"Error occurred\");\r\n      return state;\r\n\r\n    case \"DELETED\":\r\n      return state;\r\n    case \"NOT_DELETED\":\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"Login Error\");\r\n      return {\r\n        ...state\r\n  \r\n      };\r\n\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"success\");\r\n      return {\r\n        ...state\r\n  \r\n      };\r\n\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"signout success\");\r\n      return {\r\n        ...state\r\n      };\r\n\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"signup success\");\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"signup fail\");\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      };\r\n\r\n      case \"SIGNED_IN_WITH_GOOGLE\" :\r\n        return{\r\n          ...state,\r\n          authError:null\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","\r\n\r\nlet urls = [];\r\n\r\nconst imageUpload = (state = urls, action) => {\r\n  switch (action.type) {\r\n    case \"UPLOAD_COMPLETE\":\r\n      return [...state, action.payload];\r\n    case \"PROGRESS\":\r\n      return state; \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default imageUpload;\r\n\r\n\r\n","\r\n\r\nlet initialState = {\r\n  fetchedValues: [],\r\n  isUpdated: false\r\n};\r\n\r\nconst updateEvent = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"FETCHED_VALUES\":\r\n      return action.payload;\r\n    case \"UPDATED\":\r\n      return {\r\n        ...state,\r\n        isUpdated: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default updateEvent;\r\n","const loadingReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case \"LOADING\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loadingReducer;\r\n","const errorReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case \"ERROR_CATCHED\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default errorReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport eventsReducers from \"./eventsReducers\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport authReducer from \"./authReducer\";\r\nimport imageUpload from \"./imageUpload\";\r\nimport updateEvent from \"./updateEvent\";\r\nimport loadingReducer from \"./loadingReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\n\r\nexport default combineReducers({\r\n  events: eventsReducers,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer,\r\n  auth: authReducer,\r\n  imageUpload,\r\n  updateEvent,\r\n  loadingReducer,\r\n  errorReducer\r\n});\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport 'firebase/storage';\r\nconst config = {\r\n  apiKey: \"AIzaSyCy_0S_rsb8MQJRuEAUwB-YME-4Nl6nEFw\",\r\n  authDomain: \"event-management-app-9f3ab.firebaseapp.com\",\r\n  databaseURL: \"https://event-management-app-9f3ab.firebaseio.com\",\r\n  projectId: \"event-management-app-9f3ab\",\r\n  storageBucket: \"event-management-app-9f3ab.appspot.com\",\r\n  messagingSenderId: \"976750584787\",\r\n  appId: \"1:976750584787:web:4a33fc4aa2bd6b34dec526\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nfirebase.firestore();\r\n\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { compose, createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createFirestoreInstance } from \"redux-firestore\";\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport firebase from \"./config/firebase\";\r\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\r\n\r\nconst rrfConfig = {\r\n  userProfile: \"users\",\r\n  useFirestoreForProfile: true\r\n};\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// const composeEnhancers =\r\n//   (typeof window !== \"undefined\" &&\r\n//     window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n//   compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  {},\r\n  composeEnhancers(applyMiddleware(thunk.withExtraArgument(getFirebase)))\r\n);\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance\r\n};\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ReactReduxFirebaseProvider {...rrfProps}>\r\n      <App />\r\n    </ReactReduxFirebaseProvider>\r\n  </Provider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}