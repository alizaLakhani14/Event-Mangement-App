{"version":3,"sources":["components/events/EventList.jsx","actions/index.js","components/Header/Header.jsx","components/HomePage.jsx","components/form/LoginForm.jsx","components/form/RegisterForm.jsx","components/form/PlacesInput.jsx","components/form/CreateEvent.jsx","components/events/MyEvents.jsx","components/events/EventDetailMap.jsx","components/events/EventDetail.jsx","components/form/EditForm.jsx","components/LandingPage.jsx","App.js","serviceWorker.js","reducers/eventsReducers.js","reducers/authReducer.js","reducers/imageUpload.js","reducers/updateEvent.js","reducers/loadingReducer.js","reducers/errorReducer.js","reducers/index.js","config/firebase.js","index.js"],"names":["connect","state","events","firestore","ordered","Events","name","firebase","profile","props","console","log","useFirestoreConnect","collection","eventList","map","event","className","key","id","size","src","images","alt","description","to","type","uploadImage","files","dispatch","getState","getFirebase","a","async","payload","uploadImages","imageUrl","Promise","resolve","reject","imageUrls","i","file","uploadTask","storage","ref","put","originFileObj","on","snapshot","error","getDownloadURL","push","length","uid","auth","signOut","then","catch","err","setTimeout","React","useState","isOpen","setIsOpen","history","useHistory","menu","Item","Divider","onClick","split","overlay","visible","placement","HomePage","this","style","margin","width","textAlign","message","Component","errorReducer","validationSchema","Yup","shape","email","required","password","mapDispatchToProps","signIn","credentials","signInWithEmailAndPassword","signInWithGoogle","parameter","login","provider","res","authError","isEmpty","initialValues","onSubmit","values","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","htmlFor","onChange","value","onBlur","Password","color","textDecoration","cursor","min","contact","confirmPassword","when","is","val","oneOf","register","newUser","getFirestore","createUserWithEmailAndPassword","doc","user","set","placeholder","fetchedValues","updateEvent","setFieldValue","placesField","address","setAddress","lat","lng","setCoordinates","onSelect","geocodeByAddress","results","getLatLng","latLng","getInputProps","suggestions","getSuggestionItemProps","loading","height","suggestion","createEvent","add","url","imageUpload","creatorId","loadingReducer","uploader","fileList","maxMembers","price","contactNumber","places","urls","creator","TextArea","autoSize","minRows","maxRows","multiple","deleteEvent","e","delete","fetchValues","filter","myEvents","EventDetailMap","latitude","longitude","center","bootstrapURLKeys","defaultCenter","defaultZoom","fontSize","text","ownProps","match","params","isVisible","setVisibility","autoplay","image","updateValues","update","createrId","obj","isUpdated","maxLength","LandingPage","App","exact","path","component","LoginForm","RegisterForm","CreateEvent","MyEvents","EvenDetail","EditForm","Boolean","window","location","hostname","initialState","authReducer","action","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","withExtraArgument","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.176b7c11.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card, Button, Icon } from \"antd\";\r\nimport \"./EventList.css\";\r\nimport { useFirestoreConnect } from \"react-redux-firebase\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst EventList = props => {\r\n  console.log(props);\r\n  useFirestoreConnect([{ collection: \"Events\" }]);\r\n  let eventList =\r\n    props.events &&\r\n    props.events.map(event => {\r\n      return (\r\n        <Card className=\"ant-card\" key={event.id} size=\"default\">\r\n          <img src={event.images[0]} alt=\"img\" className=\"event-img\" />\r\n          <div className=\"details\">\r\n            <h1 className=\"event-heading\">{event.name}</h1>\r\n            <p>{event.description}</p>\r\n            <NavLink to={`event/${event.id}`}>\r\n              <button className=\"view-more\">\r\n                View More <Icon type=\"arrow-right\" className=\"view-more-icon\" />{\" \"}\r\n              </button>\r\n            </NavLink>\r\n          </div>\r\n        </Card>\r\n      );\r\n    });\r\n  return <div className=\"eventList\">{eventList}</div>;\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    events: state.firestore.ordered.Events,\r\n    name: state.firebase.profile.name\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(EventList);\r\n","import firebase from \"firebase/app\";\r\n\r\nexport const createEvent = event => {\r\n  return (dispatch, getFirebase, getState) => {\r\n    dispatch({ type: \"LOADING\", payload: true });\r\n    const firestore = firebase.firestore();\r\n    firestore\r\n      .collection(\"Events\")\r\n      .add({\r\n        ...event\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"CREATE_EVENT\", event });\r\n        dispatch({ type: \"LOADING\", payload: false });\r\n      })\r\n      .catch(err => {\r\n        // dispatch({ type: \"ERROR\", err });\r\n        dispatch({ type: \"ERROR_CATCHED\", payload: true });\r\n        setTimeout(() => {\r\n          dispatch({ type: \"ERROR_CATCHED\", payload: false });\r\n        }, 10000);\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteEvent = e => {\r\n  return (dispatch, getFirebase, getState) => {\r\n    const firestore = firebase.firestore();\r\n    firestore\r\n      .collection(\"Events\")\r\n      .doc(e.id)\r\n      .delete()\r\n      .then(res => {\r\n        dispatch({ type: \"DELETED\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"ERROR_CATCHED\", payload: true });\r\n        setTimeout(() => {\r\n          dispatch({ type: \"ERROR_CATCHED\", payload: false });\r\n        }, 10000);\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateValues = (\r\n  id,\r\n  name,\r\n  description,\r\n  price,\r\n  maxMembers,\r\n  contactNumber,\r\n  places,\r\n  history\r\n) => {\r\n  return (dispatch, getFirebase, getState) => {\r\n    dispatch({ type: \"LOADING\", payload: true });\r\n    const firestore = firebase.firestore();\r\n    firestore\r\n      .collection(\"Events\")\r\n      .doc(id)\r\n      .update({\r\n        name,\r\n        description,\r\n        price,\r\n        maxMembers,\r\n        contactNumber,\r\n        places\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"LOADING\", payload: false });\r\n        history.push(\"/MyEvents\");\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"ERROR_CATCHED\", payload: true });\r\n        setTimeout(() => {\r\n          dispatch({ type: \"ERROR_CATCHED\", payload: false });\r\n        }, 10000);\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchValues = (id, events) => {\r\n  return dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        let values = events.filter(event => event.id === id);\r\n        if (values.length > 0) {\r\n          dispatch({ type: \"FETCHED_VALUES\", payload: values });\r\n          return resolve(values);\r\n        }\r\n      } catch (error) {\r\n        return resolve(false);\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const signIn = (credentials, history) => {\r\n  return (dispatch, getState, getFirebase) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n        history.push(\"/homePage\");\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        // dispatch({ type: \"LOGIN_ERROR\", err });\r\n        dispatch({ type: \"ERROR_CATCHED\", payload: true });\r\n        setTimeout(() => {\r\n          dispatch({ type: \"ERROR_CATCHED\", payload: false });\r\n        }, 10000);\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, getFirebase) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"ERROR_CATCHED\", payload: true });\r\n        setTimeout(() => {\r\n          dispatch({ type: \"ERROR_CATCHED\", payload: false });\r\n        }, 10000);\r\n      });\r\n  };\r\n};\r\n\r\nexport const register = (newUser, history) => {\r\n  return (dispatch, getState, getFirebase, getFirestore) => {\r\n    console.log(\"fdsfds\", history);\r\n    const firebase = getFirebase();\r\n    const firestore = firebase.firestore();\r\n    return firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then(res => {\r\n        console.log(res, \"resss\");\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(res.user.uid)\r\n          .set({\r\n            name: newUser.name,\r\n            contact: newUser.contact\r\n            // id: newUser.uid\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n        history.push(\"/homePage\");\r\n        \r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"ERROR_CATCHED\", payload: true });\r\n        setTimeout(() => {\r\n          dispatch({ type: \"ERROR_CATCHED\", payload: false });\r\n        }, 10000);\r\n      });\r\n  };\r\n};\r\n\r\nexport const signInWithGoogle = parameter => {\r\n  return (dispatch, getState, getFirebase) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .login({\r\n        provider: \"google\",\r\n        type: \"popup\"\r\n      })\r\n      .then(res => {\r\n        console.log(\"res\", res);\r\n        dispatch({ type: \"SIGNED_IN_WITH_GOOGLE\" });\r\n        parameter.push(\"/homePage\");\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"ERROR_CATCHED\", payload: true });\r\n        setTimeout(() => {\r\n          dispatch({ type: \"ERROR_CATCHED\", payload: false });\r\n        }, 10000);\r\n      });\r\n  };\r\n};\r\n\r\nexport const uploadImage = (files, name) => {\r\n  console.log(\"incoming files\", files);\r\n  return async (dispatch, getState, getFirebase) => {\r\n    try {\r\n      dispatch({ type: \"LOADING\", payload: true });\r\n      let firebase = getFirebase();\r\n      const imageUrl = await uploadImages(files, name, firebase, dispatch);\r\n      console.log(imageUrl);\r\n      dispatch({ type: \"UPLOAD_COMPLETE\", payload: imageUrl });\r\n      dispatch({ type: \"LOADING\", payload: false });\r\n      return Promise.resolve(imageUrl);\r\n    } catch (error) {\r\n      return Promise.resolve(false);\r\n    }\r\n  };\r\n};\r\n\r\nconst uploadImages = (files, name, firebase, dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    let imageUrls = [];\r\n    try {\r\n      for (let i = 0; i < files.length; i++) {\r\n        const file = files[i];\r\n        const uploadTask = firebase\r\n          .storage()\r\n          .ref(`images/${name}/${file.name}`)\r\n          .put(file.originFileObj);\r\n\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          snapshot => {\r\n            console.log(snapshot);\r\n            dispatch({ type: \"PROGRESS\", payload: \"progressing\" });\r\n          },\r\n          error => {\r\n            console.log(error);\r\n            reject(error);\r\n          },\r\n          async () => {\r\n            let imageUrl = await uploadTask.snapshot.ref.getDownloadURL();\r\n            console.log(imageUrl);\r\n            imageUrls.push(imageUrl);\r\n            if (imageUrls.length === files.length) {\r\n              console.log({ imageUrls });\r\n              resolve(imageUrls);\r\n            }\r\n          }\r\n        );\r\n      }\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"./../../actions\";\r\nimport { Menu, Dropdown, Icon } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  let history = useHistory();\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item key=\"0\">\r\n        <NavLink to=\"/createEvent\">Create Event</NavLink>\r\n      </Menu.Item>\r\n      <Menu.Divider />\r\n      <Menu.Item\r\n        key=\"1\"\r\n        onClick={() => {\r\n          history.push(\"/homePage\");\r\n          props.signOut();\r\n        }}\r\n      >\r\n        Sign Out\r\n      </Menu.Item>\r\n      <Menu.Divider />\r\n      <Menu.Item key=\"3\">\r\n        <NavLink to=\"/MyEvents\">My Events</NavLink>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n  return (\r\n    <div>\r\n      <header>\r\n        <h1>EVENTS</h1>\r\n        <div className=\"buttons\">\r\n          {props.uid ? (\r\n            <div className=\"signed-in-header-button\">\r\n              <div className=\"signed-in-div\">\r\n                <div className=\"initials\">\r\n                  {props.name && props.name.split(\" \")[0][0]}\r\n                </div>\r\n              </div>\r\n              <Dropdown overlay={menu} visible={isOpen} placement=\"bottomRight\">\r\n                <button\r\n                  className=\"profile-name\"\r\n                  onClick={() => {\r\n                    setIsOpen(!isOpen);\r\n                  }}\r\n                >\r\n                  {props.name}\r\n                  <Icon type=\"caret-down\" className=\"caret-down-icon\" />\r\n                </button>\r\n              </Dropdown>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {\" \"}\r\n              <div className=\"signed-out-header-buttons\">\r\n                <NavLink to=\"/login\">\r\n                  <button type=\"primary\" className=\"header-button signIn\">\r\n                    Sign In\r\n                  </button>\r\n                </NavLink>\r\n                ;{\" \"}\r\n                <NavLink to=\"/register\">\r\n                  <button className=\"header-button sign-up\">Register</button>\r\n                </NavLink>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signOut: () => {\r\n      dispatch(signOut());\r\n    }\r\n  };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    uid: state.firebase.auth.uid,\r\n    events: state.firestore.ordered.Events,\r\n    // error: state.errorReducer,\r\n    name: state.firebase.profile.name\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React, { Component } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./HomePage.css\";\r\nimport { Layout, Alert } from \"antd\";\r\nimport EventList from \"./events/EventList\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./Header/Header\";\r\n\r\nclass HomePage extends Component {\r\n  render() {\r\n    const { error } = this.props;\r\n    return (\r\n      <div className=\"App\">\r\n        <Layout className=\"layout-style\">\r\n          <Header />\r\n          <section className=\"events-list\">\r\n            <EventList />\r\n          </section>\r\n          <div className=\"error-div\">\r\n            {this.props.error === true && (\r\n              <Alert\r\n                style={{\r\n                  margin: \"1em\",\r\n                  width: \"300px\",\r\n                  textAlign: \"center\"\r\n                }}\r\n                type=\"error\"\r\n                message=\"Something went wrong.\"\r\n              ></Alert>\r\n            )}\r\n          </div>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    error: state.errorReducer\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HomePage);\r\n","import { useHistory } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Input, Button, Icon } from \"antd\";\r\nimport \"./LoginForm.css\";\r\nimport { signIn, signInWithGoogle } from \"./../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Alert } from \"antd\";\r\nimport Header from \"./../Header/Header\";\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .required(\"Enter Your Email Address\")\r\n    .email(\"Invalid Email\"),\r\n  password: Yup.string().required(\"Enter your password\")\r\n});\r\n\r\nconst LoginForm = props => {\r\n  let history = useHistory();\r\n  console.log(props);\r\n  console.log(\"component appeared\");\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n          password: \"\"\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={values => {\r\n          props.signIn(values, history);\r\n         \r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting\r\n        }) => (\r\n          <>\r\n            <Header />\r\n            <div className=\"container\">\r\n              <div className=\"login-form-container\">\r\n                <form className=\"login-form\">\r\n                  <div className=\"form-field\">\r\n                    <label htmlFor=\"email\">Email Address</label>\r\n                    <Input\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      onChange={handleChange}\r\n                      value={values.email}\r\n                      onBlur={handleBlur}\r\n                    ></Input>\r\n                    {errors.email && touched.email ? (\r\n                      <div className=\"Error-message\">{errors.email}</div>\r\n                    ) : null}\r\n                  </div>\r\n                  <div className=\"form-field\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <Input.Password\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      onChange={handleChange}\r\n                      value={values.password}\r\n                      onBlur={handleBlur}\r\n                    ></Input.Password>\r\n                    {errors.password && touched.password ? (\r\n                      <div className=\"Error-message\">{errors.password}</div>\r\n                    ) : null}\r\n                  </div>\r\n                  <div className=\"form-field\">\r\n                    <Button type=\"primary submit\" onClick={handleSubmit}>\r\n                      Login\r\n                    </Button>\r\n                  </div>\r\n                  <div className=\"partition\">\r\n                    <hr></hr>\r\n                    <span className=\"partition-span\">OR</span>\r\n                    <hr></hr>\r\n                  </div>\r\n                </form>\r\n                <div className=\"form-field\">\r\n                  <button\r\n                    className=\"login-button-google\"\r\n                    type=\"submit\"\r\n                    onClick={() => {\r\n                      props.signInWithGoogle(props.history);\r\n                   \r\n                    }}\r\n                  >\r\n                    <Icon type=\"google\" className=\"google-icon\" />\r\n                    Login with Google\r\n                  </button>\r\n                </div>\r\n                <div className=\"form-field\">\r\n                  <p>\r\n                    Don't have an account.\r\n                    <span\r\n                      style={{\r\n                        color: \"blue\",\r\n                        textDecoration: \"underline\",\r\n                        margin: \"1px\",\r\n                        cursor: \"pointer\"\r\n                      }}\r\n                      onClick={() => {\r\n                        props.history.push(\"/register\");\r\n                      }}\r\n                    >\r\n                      Register\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"error-div\">\r\n                {props.error === true && (\r\n                  <Alert\r\n                    style={{\r\n                      margin: \"1em\",\r\n                      width: \"300px\",\r\n                      textAlign: \"center\"\r\n                    }}\r\n                    type=\"error\"\r\n                    message=\"Invalid Email or Password\"\r\n                  ></Alert>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    isEmpty: state.firebase.auth.isEmpty,\r\n    error: state.errorReducer\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  signIn,\r\n  signInWithGoogle\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","import { useHistory } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Input, Button, Alert } from \"antd\";\r\nimport \"./RegisterForm.css\";\r\nimport { register } from \"./../../actions/index\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./../Header/Header\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .required(\"Must enter your name\")\r\n    .min(6, \"too short\"),\r\n  contact: Yup.number().required(\"Must give number\"),\r\n  email: Yup.string()\r\n    .required(\"Must give email\")\r\n    .email(\"Invalid Email\"),\r\n  password: Yup.string()\r\n    .required(\"Enter your Password\")\r\n    .min(8, \"Too short\"),\r\n  confirmPassword: Yup.string().when(\"password\", {\r\n    is: val => (val && val.length > 0 ? true : false),\r\n    then: Yup.string().oneOf(\r\n      [Yup.ref(\"password\")],\r\n      \"Both password need to be the same\"\r\n    )\r\n  })\r\n});\r\n\r\nconst RegisterForm = props => {\r\n  // let history = useHistory();\r\n  // console.log(history, \"history \");\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          name: \"\",\r\n          contact: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          confirmPassword: \"\"\r\n        }}\r\n        validationSchema={validationSchema}\r\n        onSubmit={values => {\r\n\r\n          props.register(values, props.history)\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting\r\n        }) => (\r\n          <>\r\n            <Header />\r\n            <div className=\"register-form-container\">\r\n              <form className=\"form\">\r\n                <div className=\"form-field\">\r\n                  <label htmlFor=\"name\">Name</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter your name\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    onChange={handleChange}\r\n                    value={values.name}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {errors.name && touched.name ? (\r\n                    <div className=\"Error-message\">{errors.name}</div>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-field\">\r\n                  <label htmlFor=\"contact\">Contact</label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    placeholder=\"Enter contact Number\"\r\n                    id=\"contact\"\r\n                    name=\"contact\"\r\n                    onChange={handleChange}\r\n                    value={values.contact}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {errors.contact && touched.contact ? (\r\n                    <div className=\"Error-message\">{errors.contact}</div>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-field\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email Address\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    onChange={handleChange}\r\n                    value={values.email}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {errors.email && touched.email ? (\r\n                    <div className=\"Error-message\">{errors.email}</div>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-field\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input.Password\r\n                    type=\"password\"\r\n                    placeholder=\"Enter your password\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    onChange={handleChange}\r\n                    value={values.password}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {errors.password && touched.password ? (\r\n                    <div className=\"Error-message\">{errors.password}</div>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-field\">\r\n                  <label htmlFor=\"password\">Confirm Password</label>\r\n                  <Input.Password\r\n                    type=\"password\"\r\n                    placeholder=\"Enter the confirmed password\"\r\n                    id=\"confirmPassword\"\r\n                    name=\"confirmPassword\"\r\n                    onChange={handleChange}\r\n                    value={values.confirmPassword}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {errors.confirmPassword ? (\r\n                    <div className=\"Error-message\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-field Button\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    onClick={handleSubmit}\r\n                    className=\"register-button\"\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n                <div className=\"form-field\">\r\n                  <p>\r\n                    Already have an account.{\" \"}\r\n                    <span\r\n                      style={{\r\n                        color: \"blue\",\r\n                        textDecoration: \"underline\",\r\n                        margin: \"1px\",\r\n                        cursor: \"pointer\"\r\n                      }}\r\n                      onClick={() => {\r\n                        props.history.push(\"/login\");\r\n                      }}\r\n                    >\r\n                      Sign In\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n              </form>\r\n              <div className=\"error-div\">\r\n                {props.error === true && (\r\n                  <Alert\r\n                    style={{\r\n                      margin: \"1em\",\r\n                      width: \"300px\",\r\n                      textAlign: \"center\"\r\n                    }}\r\n                    type=\"error\"\r\n                    message=\"Something went wrong\"\r\n                  ></Alert>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    error: state.errorReducer\r\n  };\r\n};\r\n\r\nconst mapDisptachToProps = dispatch => {\r\n  return {\r\n    register:(newUser, history) => {\r\n      dispatch(register(newUser, history));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDisptachToProps)(RegisterForm);\r\n","import React, { useState } from \"react\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng\r\n} from \"react-places-autocomplete\";\r\nimport { Input } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./PlacesInput.css\";\r\n\r\nconst PlacesInput = ({ setFieldValue, placesField }, props) => {\r\n  const [address, setAddress] = React.useState(\"\");\r\n  const [coordinates, setCoordinates] = React.useState({\r\n    lat: null,\r\n    lng: null\r\n  });\r\n\r\n  const handleSelect = async value => {\r\n    console.log(value);\r\n    const results = await geocodeByAddress(value);\r\n    const latLng = await getLatLng(results[0]);\r\n    setAddress(value);\r\n    setCoordinates(latLng);\r\n    console.log(latLng);\r\n    setFieldValue(\"places\", latLng);\r\n  };\r\n\r\n  const handleChange = address => {\r\n    setAddress(address);\r\n  };\r\n  // const handleClick = value => {\r\n  //   setAddress(value);\r\n  // };\r\n  return (\r\n    <div>\r\n      <PlacesAutocomplete\r\n        value={address}\r\n        onChange={handleChange}\r\n        onSelect={handleSelect}\r\n      >\r\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n          <>\r\n            <Input\r\n              style={{\r\n                height: \"32px\"\r\n              }}\r\n              {...getInputProps({\r\n                placeholder: \"Type your address\"\r\n              })}\r\n            ></Input>\r\n            <div>{loading ? <div>...loading</div> : null}</div>\r\n            {suggestions.map(suggestion => {\r\n              return (\r\n                <div\r\n                  \r\n                  {...getSuggestionItemProps}\r\n                >\r\n                  {suggestion.description}\r\n                </div>\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n      </PlacesAutocomplete>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    fetchedValues: state.updateEvent[0]\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(PlacesInput);\r\n","import { useHistory } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { Input } from \"antd\";\r\nimport { Upload, Button, Icon, Alert } from \"antd\";\r\nimport { Formik } from \"formik\";\r\nimport \"./CreateEvent.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { createEvent, uploadImage } from \"./../../actions\";\r\nimport PlacesInput from \"./PlacesInput\";\r\nimport Header from \"./../Header/Header\";\r\n\r\nconst CreateEvent = props => {\r\n  // let history = useHistory();\r\n\r\n  console.log(props, \"props\");\r\n\r\n  let uploader;\r\n  const imageUpload = file => {\r\n    console.log(file.fileList);\r\n    uploader = file.fileList;\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: \"\",\r\n        maxMembers: \"\",\r\n        description: \"\",\r\n        price: \"\",\r\n        contactNumber: \"\",\r\n        places: \"\"\r\n    \r\n      }}\r\n      onSubmit={async values => {\r\n        const urls = await props.uploadImage(uploader, values.name);\r\n\r\n        props.createEvent({\r\n          ...values,\r\n          creator: props.creatorId,\r\n          images: urls\r\n        });\r\n        props.history.push(\"/homePage\");\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        setFieldValue\r\n      }) => (\r\n        <>\r\n          <Header />\r\n     \r\n          <div className=\"form-container\">\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"eventName\">Event Name</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Event name\"\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  onChange={handleChange}\r\n                  value={values.name}\r\n                ></Input>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"maxMembers\">Maxium Members</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  id=\"maxMembers\"\r\n                  name=\"maxMembers\"\r\n                  onChange={handleChange}\r\n                  value={values.maxMembers}\r\n                ></Input>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"description\">Event Description</label>\r\n                <Input.TextArea\r\n                  placeholder=\"Describe your event....\"\r\n                  type=\"text\"\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  // autoSize={true}\r\n                  autoSize={{ minRows: 1, maxRows: 7 }}\r\n                  onChange={handleChange}\r\n                  value={values.description}\r\n                ></Input.TextArea>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"price\">Price per ticket</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  id=\"price\"\r\n                  name=\"price\"\r\n                  onChange={handleChange}\r\n                  value={values.price}\r\n                ></Input>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"contactNumber\">Contact Number</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  id=\"contactNumber\"\r\n                  name=\"contactNumber\"\r\n                  onChange={handleChange}\r\n                  value={values.contactNumber}\r\n                ></Input>\r\n              </div>\r\n\r\n              <div className=\"form-field\">\r\n                <label>Venue</label>\r\n                <PlacesInput setFieldValue={setFieldValue} />\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <Upload onChange={imageUpload} multiple>\r\n                  <Button>\r\n                    <Icon type=\"upload\" /> Upload\r\n                  </Button>\r\n                </Upload>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <button\r\n                  className=\"create-event-button\"\r\n                  onClick={handleSubmit}\r\n                  type=\"submit\"\r\n                >\r\n                  Create Event\r\n                  {props.loading === true && (\r\n                    <Icon\r\n                      type=\"loading\"\r\n                      style={{ color: \"white\", margin: \"3px\" }}\r\n                    ></Icon>\r\n                  )}\r\n                </button>\r\n              </div>\r\n              {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\r\n            </form>\r\n            <div className=\"error-div\">\r\n              {props.error === true && (\r\n                <Alert\r\n                  style={{\r\n                    margin: \"1em\",\r\n                    width: \"300px\",\r\n                    textAlign: \"center\"\r\n                  }}\r\n                  type=\"error\"\r\n                  message=\"Something went wrong\"\r\n                ></Alert>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    url: state.imageUpload.url,\r\n    creatorId: state.firebase.auth.uid,\r\n    imageUpload: state.imageUpload,\r\n    fetchedValues: state.updateEvent,\r\n    loading: state.loadingReducer,\r\n    error: state.errorReducer\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  createEvent,\r\n  uploadImage\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateEvent);\r\n","import { useHistory } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card, Icon, Alert } from \"antd\";\r\nimport { useFirestoreConnect } from \"react-redux-firebase\";\r\nimport \"./MyEvents.css\";\r\n\r\nimport { deleteEvent, fetchValues } from \"./../../actions/\";\r\nimport Header from \"./../Header/Header\";\r\n\r\nconst MyEvents = props => {\r\n  let history = useHistory();\r\n  let myEvents;\r\n  useFirestoreConnect([{ collection: \"Events\" }]);\r\n  console.log(props.events, \"events\");\r\n\r\n  myEvents = props.events\r\n    ? props.events.filter(event => event.creator === props.user)\r\n    : null;\r\n\r\n\r\n  return (\r\n    <div className=\"my-events\">\r\n      <Header />\r\n      <div className=\"my-events-container\">\r\n        <div className=\"heading\">\r\n          <h1 className=\"my-events-heading\">My Events</h1>\r\n        </div>\r\n        <div className=\"my-events-list\">\r\n          {myEvents &&\r\n            myEvents.map(event => (\r\n              <Card\r\n                className=\"ant-card\"\r\n                key={event.id}\r\n                style={{ margin: \"1em\" }}\r\n              >\r\n                <img\r\n                  src={event.images[0]}\r\n                  alt=\"img\"\r\n                  className=\"event-img\"\r\n                ></img>\r\n                <div className=\"details\">\r\n                  <h1 className=\"event-heading\">{event.name}</h1>\r\n                  <p className=\"my-events-description\">{event.description}</p>\r\n                  <div className=\"my-events-buttons\">\r\n                    <div>\r\n                      <button\r\n                        className=\"view-more-button\"\r\n                        onClick={() => props.history.push(`event/${event.id}`)}\r\n                      >\r\n                        {\" \"}\r\n                        View More\r\n                      </button>\r\n                    </div>\r\n                    <div>\r\n                      <button\r\n                        onClick={() => props.deleteEvent(event)}\r\n                        className=\"delete-button\"\r\n                      >\r\n                        Delete Event\r\n                      </button>\r\n                    </div>\r\n                    <div>\r\n                      <button\r\n                        className=\"edit-button\"\r\n                        onClick={() => {\r\n                          props\r\n                            .fetchValues(event.id, props.events)\r\n                            .then(res => history.push(\"/editForm\"));\r\n                        }}\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"delete-edit-icons\">\r\n                      <Icon\r\n                        type=\"delete\"\r\n                        className=\"delete\"\r\n                        onClick={() => props.deleteEvent(event)}\r\n                      />\r\n                      <Icon\r\n                        type=\"edit\"\r\n                        className=\"edit\"\r\n                        onClick={() => {\r\n                          props\r\n                            .fetchValues(event.id, props.events)\r\n                            .then(res => history.push(\"/editForm\"));\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Card>\r\n            ))}\r\n        </div>\r\n        <div className=\"error-div\">\r\n          {props.error === true && (\r\n            <Alert\r\n              style={{\r\n                margin: \"1em\",\r\n                width: \"300px\",\r\n                textAlign: \"center\"\r\n              }}\r\n              type=\"error\"\r\n              message=\"Something went wrong\"\r\n              className=\"error-alert\"\r\n            ></Alert>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    events: state.firestore.ordered.Events,\r\n    user: state.firebase.auth.uid,\r\n    error: state.errorReducer\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  deleteEvent,\r\n  fetchValues\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyEvents);\r\n","import React from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport { Icon } from \"antd\";\r\n\r\nconst EventDetailMap = ({ latitude, longitude }) => {\r\n  const center = [latitude, longitude];\r\n  const zoom = 11;\r\n\r\n  const Marker = () => (\r\n    <Icon\r\n      type=\"environment\"\r\n      style={{\r\n        color: \"red\",\r\n        fontSize: \"40px\"\r\n      }}\r\n    />\r\n  );\r\n  return (\r\n    <div>\r\n      <div style={{ height: \"400px\", width: \"50%\", margin: \"1em\" }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: \"AIzaSyBmVNjj2wxiLjkFbbXfiuaH36kFJttvVhs\" }}\r\n          defaultCenter={center}\r\n          defaultZoom={zoom}\r\n        >\r\n          <Marker lat={latitude} lng={longitude} text=\"My Marker\" />\r\n        </GoogleMapReact>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventDetailMap;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useFirestoreConnect } from \"react-redux-firebase\";\r\nimport { Icon, Carousel } from \"antd\";\r\nimport EventDetailMap from \"./EventDetailMap\";\r\nimport \"./EventDetail.css\";\r\nimport Header from \"./../../components/Header/Header\";\r\n\r\nconst EventDetail = props => {\r\n  const [isVisible, setVisibility] = React.useState(false);\r\n\r\n  const toggleVisibilityButoon = () => {\r\n    setVisibility(!isVisible);\r\n  };\r\n\r\n  useFirestoreConnect([{ collection: \"Events\" }]);\r\n\r\n  console.log(props.event.images);\r\n  return (\r\n    <div className=\"detailPage\">\r\n      <Header />\r\n      <div className=\"event-detail-div\">\r\n        <div className=\"img-name\">\r\n          <Carousel autoplay>\r\n            {props.event.images &&\r\n              props.event.images.map(image => (\r\n                <img src={image} alt=\"img\" className=\"event-detail-img\" />\r\n              ))}\r\n          </Carousel>\r\n\r\n          <div className=\"event-details-div\">\r\n            <div>\r\n              <h1 className=\"event-name-heading \">{props.event.name}</h1>\r\n            </div>\r\n\r\n            <div className=\"contact-info\">\r\n              <Icon\r\n                type=\"phone\"\r\n               className='event-detail-icon'\r\n              />\r\n              <span className=\"event-span\">{props.event.contactNumber}</span>\r\n            </div>\r\n            <div>\r\n              <Icon\r\n                type=\"user\"\r\n                className='event-detail-icon'\r\n              />\r\n              <span className=\"event-span\">{props.event.maxMembers}</span>\r\n            </div>\r\n            <div>\r\n              <Icon\r\n                type=\"tag\"\r\n                className='event-detail-icon'\r\n              />\r\n              <span className=\"event-span\">{`${props.event.price} Rs`}</span>\r\n            </div>\r\n            <div className=\"event-description-div\">\r\n              <p className=\"event-description\">{props.event.description}</p>\r\n            </div>\r\n            <div className=\"show-map-div\">\r\n              <button onClick={toggleVisibilityButoon} className=\"show-map-btn\">\r\n                {isVisible === false ? \"Show Map\" : \"Hide Map\"}\r\n              </button>\r\n            </div>\r\n            <div className=\"map\">\r\n              {props.event.places && isVisible === true && (\r\n                <EventDetailMap\r\n                  latitude={props.event.places.lat}\r\n                  longitude={props.event.places.lng}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const events = state.firestore.ordered.Events;\r\n  const id = ownProps.match.params.id;\r\n  const event = events ? events.filter(event => event.id === id)[0] : \"loading\";\r\n\r\n  return {\r\n    event\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(EventDetail);\r\n","import { useHistory } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { Input } from \"antd\";\r\nimport { Upload, Button, Icon } from \"antd\";\r\nimport { Formik } from \"formik\";\r\nimport \"./CreateEvent.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateValues, uploadImage } from \"./../../actions\";\r\nimport PlacesInput from \"./PlacesInput\";\r\n\r\nconst CreateEvent = props => {\r\n  let history = useHistory();\r\n\r\n  console.log(props, \"props\");\r\n\r\n  let uploader;\r\n  const imageUpload = file => {\r\n    console.log(file.fileList);\r\n    uploader = file.fileList;\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: props.obj && props.obj.name,\r\n        maxMembers: props.obj && props.obj.maxMembers,\r\n        description: props.obj && props.obj.description,\r\n        price: props.obj && props.obj.price,\r\n        contactNumber: props.obj && props.obj.contactNumber,\r\n        places: \"\"\r\n       \r\n      }}\r\n      onSubmit={values => {\r\n        props.updateValues(\r\n          props.obj.id,\r\n          values.name,\r\n          values.description,\r\n          values.price,\r\n          values.maxMembers,\r\n          values.contactNumber,\r\n          values.places,\r\n          history\r\n        );\r\n        props.isUpdated === true && props.history.push(\"/MyEvents\");\r\n      }}\r\n    >\r\n      {({\r\n        values,\r\n        errors,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        setFieldValue\r\n      }) => (\r\n        <>\r\n          <h1 className=\"create-event-heading\">Edit Event</h1>\r\n          <div className=\"form-container\">\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"eventName\">Event Name</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Event name\"\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  onChange={handleChange}\r\n                  value={values.name}\r\n                ></Input>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"maxMembers\">Maxium Members</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  id=\"maxMembers\"\r\n                  name=\"maxMembers\"\r\n                  onChange={handleChange}\r\n                  value={values.maxMembers}\r\n                ></Input>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"description\">Event Description</label>\r\n                <Input.TextArea\r\n                  placeholder=\"Describe your event....\"\r\n                  type=\"text\"\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  autoSize={true}\r\n                  maxLength={1000}\r\n                  onChange={handleChange}\r\n                  value={values.description}\r\n                ></Input.TextArea>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"price\">Price per ticket</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  id=\"price\"\r\n                  name=\"price\"\r\n                  onChange={handleChange}\r\n                  value={values.price}\r\n                ></Input>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <label htmlFor=\"contactNumber\">Contact Number</label>\r\n                <Input\r\n                  type=\"number\"\r\n                  id=\"contactNumber\"\r\n                  name=\"contactNumber\"\r\n                  onChange={handleChange}\r\n                  value={values.contactNumber}\r\n                ></Input>\r\n              </div>\r\n\r\n              <div className=\"form-field\">\r\n                <label>Venue</label>\r\n                <PlacesInput setFieldValue={setFieldValue} />\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <Upload onChange={imageUpload} multiple>\r\n                  <Button>\r\n                    <Icon type=\"upload\" /> Upload\r\n                  </Button>\r\n                </Upload>\r\n              </div>\r\n              <div className=\"form-field\">\r\n                <button\r\n                  className=\"create-event-button\"\r\n                  onClick={handleSubmit}\r\n                  type=\"submit\"\r\n                >\r\n                  Save\r\n                \r\n                </button>\r\n              </div>\r\n              \r\n            </form>\r\n          </div>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    url: state.imageUpload.url,\r\n    createrId: state.firebase.auth.uid,\r\n    imageUpload: state.imageUpload,\r\n    obj: state.updateEvent[0],\r\n    isUpdated: state.updateEvent.isUpdated,\r\n    loading: state.loadingReducer\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  updateValues,\r\n  uploadImage\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateEvent);\r\n","import React from \"react\";\r\nimport \"./LandingPage.css\";\r\nimport { Button, Icon } from \"antd\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst LandingPage = () => {\r\n  return (\r\n    <div className=\"landing-page\">\r\n      <p className=\"landing-page-heading\">Events</p>\r\n      <NavLink to=\"/homePage\">\r\n        <button className=\"landing-page-button\">\r\n          Get Started <Icon type=\"arrow-right\" className=\"landing-page-icon\" />\r\n        </button>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React, { Component } from \"react\";\r\nimport HomePage from \"./components/HomePage\";\r\nimport LoginForm from \"./components/form/LoginForm\";\r\nimport RegisterForm from \"./components/form/RegisterForm\";\r\nimport CreateEvent from \"./components/form/CreateEvent\";\r\nimport MyEvents from \"./components/events/MyEvents\";\r\nimport EvenDetail from \"./components/events/EventDetail\";\r\nimport EditForm from \"./components/form/EditForm\";\r\nimport LandingPage from \"./components/LandingPage\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={LandingPage}></Route>\r\n            <Route exact path=\"/homePage\" component={HomePage}></Route>\r\n            <Route path=\"/login\" component={LoginForm}></Route>\r\n            <Route path=\"/register\" component={RegisterForm}></Route>\r\n            <Route path=\"/createEvent\" component={CreateEvent}></Route>\r\n            <Route path=\"/MyEvents\" component={MyEvents}></Route>\r\n            <Route path=\"/event/:id\" component={EvenDetail}></Route>\r\n            <Route path=\"/editForm\" component={EditForm} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","let events = [];\r\n\r\nexport default (state = events, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_EVENT\":\r\n      // console.log(\"create event\", action.event);\r\n      return [...state, action.event];\r\n    case \"ERROR\":\r\n      // console.log(\"Error occurred\");\r\n      return state;\r\n\r\n    case \"DELETED\":\r\n      return state;\r\n    case \"NOT_DELETED\":\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"Login Error\");\r\n      return {\r\n        ...state\r\n  \r\n      };\r\n\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"success\");\r\n      return {\r\n        ...state\r\n  \r\n      };\r\n\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"signout success\");\r\n      return {\r\n        ...state\r\n      };\r\n\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"signup success\");\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"signup fail\");\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      };\r\n\r\n      case \"SIGNED_IN_WITH_GOOGLE\" :\r\n        return{\r\n          ...state,\r\n          authError:null\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","\r\n\r\nlet urls = [];\r\n\r\nconst imageUpload = (state = urls, action) => {\r\n  switch (action.type) {\r\n    case \"UPLOAD_COMPLETE\":\r\n      return [...state, action.payload];\r\n    case \"PROGRESS\":\r\n      return state; \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default imageUpload;\r\n\r\n\r\n","\r\n\r\nlet initialState = {\r\n  fetchedValues: [],\r\n  isUpdated: false\r\n};\r\n\r\nconst updateEvent = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"FETCHED_VALUES\":\r\n      return action.payload;\r\n    case \"UPDATED\":\r\n      return {\r\n        ...state,\r\n        isUpdated: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default updateEvent;\r\n","const loadingReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case \"LOADING\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loadingReducer;\r\n","const errorReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case \"ERROR_CATCHED\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default errorReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport eventsReducers from \"./eventsReducers\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport authReducer from \"./authReducer\";\r\nimport imageUpload from \"./imageUpload\";\r\nimport updateEvent from \"./updateEvent\";\r\nimport loadingReducer from \"./loadingReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\n\r\nexport default combineReducers({\r\n  events: eventsReducers,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer,\r\n  auth: authReducer,\r\n  imageUpload,\r\n  updateEvent,\r\n  loadingReducer,\r\n  errorReducer\r\n});\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport 'firebase/storage';\r\nconst config = {\r\n  apiKey: \"AIzaSyCy_0S_rsb8MQJRuEAUwB-YME-4Nl6nEFw\",\r\n  authDomain: \"event-management-app-9f3ab.firebaseapp.com\",\r\n  databaseURL: \"https://event-management-app-9f3ab.firebaseio.com\",\r\n  projectId: \"event-management-app-9f3ab\",\r\n  storageBucket: \"event-management-app-9f3ab.appspot.com\",\r\n  messagingSenderId: \"976750584787\",\r\n  appId: \"1:976750584787:web:4a33fc4aa2bd6b34dec526\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nfirebase.firestore();\r\n\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { compose, createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createFirestoreInstance } from \"redux-firestore\";\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport firebase from \"./config/firebase\";\r\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\r\n\r\nconst rrfConfig = {\r\n  userProfile: \"users\",\r\n  useFirestoreForProfile: true\r\n};\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// const composeEnhancers =\r\n//   (typeof window !== \"undefined\" &&\r\n//     window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n//   compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  {},\r\n  composeEnhancers(applyMiddleware(thunk.withExtraArgument(getFirebase)))\r\n);\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance\r\n};\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ReactReduxFirebaseProvider {...rrfProps}>\r\n      <App />\r\n    </ReactReduxFirebaseProvider>\r\n  </Provider>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}